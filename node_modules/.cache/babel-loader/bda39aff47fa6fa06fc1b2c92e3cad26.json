{"ast":null,"code":"import axios from \"axios\";\nimport { apiEndpoint, apiEndpointFunction } from '@iso/lib/helpers/endpoint';\nimport { authHeader } from '@iso/lib/helpers/authHeader';\nexport const taskService = {\n  getList,\n  getBoard,\n  storeOrUpdateTasks,\n  destroy,\n  changeStatus\n};\n\nfunction getList(propertyId) {\n  return axios.get(`${apiEndpoint.tasks}?property_id=${propertyId}`, {\n    headers: authHeader()\n  }).then(res => {\n    if (res && res.status === 200 && res.data.code === '0000') {\n      return res.data;\n    }\n  });\n}\n\nfunction getBoard(propertyId) {\n  return axios.get(`${apiEndpoint.tasks}/get-board?property_id=${propertyId}`, {\n    headers: authHeader()\n  }).then(res => {\n    if (res && res.status === 200 && res.data.code === '0000') {\n      return res.data;\n    }\n  });\n}\n\nfunction storeOrUpdateTasks(data, id = null) {\n  return (id ? axios.put(apiEndpointFunction.tasks(id), data, {\n    headers: authHeader()\n  }) : axios.post(apiEndpoint.tasks, data, {\n    headers: authHeader()\n  })).then(res => {\n    if (res && res.status === 200) {\n      return res.data;\n    }\n\n    return {};\n  });\n}\n\nfunction changeStatus(data, id = null) {\n  axios.put(`${apiEndpointFunction.tasks(id)}/change-status`, data, {\n    headers: authHeader()\n  });\n}\n\nfunction destroy(id) {\n  return axios.delete(apiEndpointFunction.tasks(id), {\n    headers: authHeader()\n  }).then(res => {\n    if (res && res.status === 200) {\n      return res.data;\n    }\n  });\n}","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/services/task.service.js"],"names":["axios","apiEndpoint","apiEndpointFunction","authHeader","taskService","getList","getBoard","storeOrUpdateTasks","destroy","changeStatus","propertyId","get","tasks","headers","then","res","status","data","code","id","put","post","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,2BAAjD;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA,QAFyB;AAGzBC,EAAAA,kBAHyB;AAIzBC,EAAAA,OAJyB;AAKzBC,EAAAA;AALyB,CAApB;;AAQP,SAASJ,OAAT,CAAiBK,UAAjB,EAA4B;AAC1B,SACEV,KAAK,CACFW,GADH,CAEK,GAAEV,WAAW,CAACW,KAAM,gBAAeF,UAAW,EAFnD,EAGI;AACEG,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAHJ,EAMIW,IANJ,CAMSC,GAAG,IAAI;AACZ,QAAGA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAtB,IAA6BD,GAAG,CAACE,IAAJ,CAASC,IAAT,KAAkB,MAAlD,EAAyD;AACvD,aAAOH,GAAG,CAACE,IAAX;AACD;AACF,GAVH,CADF;AAaD;;AAED,SAASX,QAAT,CAAkBI,UAAlB,EAA6B;AAC3B,SACEV,KAAK,CACFW,GADH,CAEK,GAAEV,WAAW,CAACW,KAAM,0BAAyBF,UAAW,EAF7D,EAGI;AACEG,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAHJ,EAMIW,IANJ,CAMSC,GAAG,IAAI;AACZ,QAAGA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAtB,IAA6BD,GAAG,CAACE,IAAJ,CAASC,IAAT,KAAkB,MAAlD,EAAyD;AACvD,aAAOH,GAAG,CAACE,IAAX;AACD;AACF,GAVH,CADF;AAaD;;AAED,SAASV,kBAAT,CAA4BU,IAA5B,EAAkCE,EAAE,GAAG,IAAvC,EAA4C;AAC1C,SAAO,CAACA,EAAE,GACRnB,KAAK,CACFoB,GADH,CAEIlB,mBAAmB,CAACU,KAApB,CAA0BO,EAA1B,CAFJ,EAGIF,IAHJ,EAII;AACEJ,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAJJ,CADQ,GAURH,KAAK,CACFqB,IADH,CAEIpB,WAAW,CAACW,KAFhB,EAGIK,IAHJ,EAII;AACEJ,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAJJ,CAVK,EAkBJW,IAlBI,CAkBCC,GAAG,IAAI;AACb,QAAGA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAzB,EAA6B;AAC3B,aAAOD,GAAG,CAACE,IAAX;AACD;;AACD,WAAO,EAAP;AACD,GAvBM,CAAP;AAwBD;;AAED,SAASR,YAAT,CAAsBQ,IAAtB,EAA4BE,EAAE,GAAG,IAAjC,EAAsC;AACpCnB,EAAAA,KAAK,CAACoB,GAAN,CACG,GAAElB,mBAAmB,CAACU,KAApB,CAA0BO,EAA1B,CAA8B,gBADnC,EAEEF,IAFF,EAGE;AACEJ,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAHF;AAOD;;AAED,SAASK,OAAT,CAAiBW,EAAjB,EAAoB;AAClB,SACEnB,KAAK,CACFsB,MADH,CAEIpB,mBAAmB,CAACU,KAApB,CAA0BO,EAA1B,CAFJ,EAGI;AACEN,IAAAA,OAAO,EAAEV,UAAU;AADrB,GAHJ,EAMIW,IANJ,CAMSC,GAAG,IAAI;AACZ,QAAGA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAzB,EAA6B;AAC3B,aAAOD,GAAG,CAACE,IAAX;AACD;AACF,GAVH,CADF;AAaD","sourcesContent":["import axios from \"axios\";\nimport { apiEndpoint, apiEndpointFunction } from '@iso/lib/helpers/endpoint';\nimport { authHeader } from '@iso/lib/helpers/authHeader';\n\nexport const taskService = {\n  getList,\n  getBoard,\n  storeOrUpdateTasks,\n  destroy,\n  changeStatus,\n};\n\nfunction getList(propertyId){\n  return (\n    axios\n      .get(\n        `${apiEndpoint.tasks}?property_id=${propertyId}`,\n        {\n          headers: authHeader(),\n        }\n      ).then(res => {\n        if(res && res.status === 200 && res.data.code === '0000'){\n          return res.data;\n        }\n      })\n  );\n}\n\nfunction getBoard(propertyId){\n  return (\n    axios\n      .get(\n        `${apiEndpoint.tasks}/get-board?property_id=${propertyId}`,\n        {\n          headers: authHeader(),\n        }\n      ).then(res => {\n        if(res && res.status === 200 && res.data.code === '0000'){\n          return res.data;\n        }\n      })\n  );\n}\n\nfunction storeOrUpdateTasks(data, id = null){\n  return (id ? (\n    axios\n      .put(\n        apiEndpointFunction.tasks(id),\n        data,\n        {\n          headers: authHeader(),\n        }\n      )\n  ) : (\n    axios\n      .post(\n        apiEndpoint.tasks,\n        data,\n        {\n          headers: authHeader()\n        }\n      )\n  )).then(res => {\n    if(res && res.status === 200){\n      return res.data;\n    }\n    return {};\n  });\n}\n\nfunction changeStatus(data, id = null){\n  axios.put(\n    `${apiEndpointFunction.tasks(id)}/change-status`,\n    data,\n    {\n      headers: authHeader()\n    }\n  )\n}\n\nfunction destroy(id){\n  return (\n    axios\n      .delete(\n        apiEndpointFunction.tasks(id),\n        {\n          headers: authHeader()\n        }\n      ).then(res => {\n        if(res && res.status === 200){\n          return res.data;\n        }\n      })\n  );\n}"]},"metadata":{},"sourceType":"module"}