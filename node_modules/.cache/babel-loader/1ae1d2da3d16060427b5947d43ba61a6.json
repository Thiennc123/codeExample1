{"ast":null,"code":"import \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/Property/PropertyModal.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { propertyService, googleService } from '@iso/services';\nimport propertyActions from '@iso/redux/property/actions';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyModalWrapper from './PropertyModal.styles';\nimport _ from 'lodash';\nimport Alert from '@iso/components/Feedback/Alert';\nconst {\n  loadProperties\n} = propertyActions;\nlet autoComplete;\n\nfunction handleAddressAutoComplete(setAddress, autoCompleteRef, setAddressShortName, setPoint) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current.input, {\n    types: ['address']\n  });\n  autoComplete.setFields(['address_components', 'formatted_address']);\n  autoComplete.addListener(\"place_changed\", () => {\n    handlePlaceSelect(setAddress, setAddressShortName, setPoint);\n  });\n}\n\nasync function handlePlaceSelect(setAddress, setAddressShortName, setPoint) {\n  const addressObject = autoComplete.getPlace();\n  const fields = [{\n    name: 'address',\n    value: addressObject.formatted_address\n  }];\n\n  for (var i = 0; i < addressObject.address_components.length; i++) {\n    var addressType = addressObject.address_components[i].types[0];\n\n    if (addressType === \"country\") {\n      fields.push({\n        name: 'country',\n        value: addressObject.address_components[i].long_name\n      });\n    }\n\n    if (addressType === \"administrative_area_level_1\") {\n      fields.push({\n        name: 'state',\n        value: addressObject.address_components[i].long_name\n      });\n    }\n  }\n\n  setAddress(fields);\n}\n\nconst PropertyModal = props => {\n  const dispatch = useDispatch();\n  const autoCompleteRef = useRef(null);\n\n  const [form] = _Form.useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [contactChecked, setContactChecked] = useState(false);\n  const currentUser = useSelector(state => state.user.user);\n  const [errMsg, setErrMsg] = useState(\"\");\n  useEffect(() => {\n    if (autoCompleteRef) {\n      document.addEventListener('google-script-loaded', handleAddress);\n    }\n  }, []);\n  useEffect(() => {\n    setFields([{\n      name: 'address',\n      value: props.editProperty.address\n    }, {\n      name: 'country',\n      value: props.editProperty.country\n    }, {\n      name: 'state',\n      value: props.editProperty.state\n    }, {\n      name: 'name',\n      value: props.editProperty.name\n    }, {\n      name: 'contact_name',\n      value: props.editProperty.contact_name\n    }, {\n      name: 'contact_email',\n      value: props.editProperty.contact_email\n    }, {\n      name: 'use_my_account',\n      value: currentUser.email === props.editProperty.contact_email\n    }]);\n\n    if (Object.keys(props.editProperty).length > 0) {\n      if (currentUser.email === props.editProperty.contact_email) {\n        setContactChecked(true);\n      } else {\n        setContactChecked(false);\n      }\n    }\n  }, [props, currentUser]);\n\n  const handleAddress = () => {\n    handleAddressAutoComplete(setFields, autoCompleteRef);\n  };\n\n  const cancelModal = () => {\n    props.cancelModal();\n    resetForm();\n  };\n\n  const handleSubmit = e => {\n    setLoading(true);\n    form.validateFields().then(async values => {\n      const res = await googleService.getLatLng(values.address);\n      var point = {};\n      var addressShortName = {};\n\n      if (res.results.length > 0 && res.results[0].geometry) {\n        point = {\n          lat: res.results[0].geometry.location.lat,\n          lng: res.results[0].geometry.location.lng\n        };\n        const addressComponents = res.results[0].address_components;\n\n        const indexCountry = _.findIndex(addressComponents, function (address) {\n          return address.types[0] === 'country';\n        });\n\n        const indexState = _.findIndex(addressComponents, function (address) {\n          return address.types[0] === 'administrative_area_level_1';\n        });\n\n        addressShortName = {\n          country: addressComponents[indexCountry].short_name || '',\n          state: addressComponents[indexState].short_name || ''\n        };\n      } else {\n        setErrMsg(\"The address invalid\");\n      }\n\n      const data = {\n        property: Object.assign(values, {\n          point\n        }),\n        addressShortName: addressShortName\n      };\n\n      if (Object.keys(addressShortName).length !== 0) {\n        onStore(data);\n      } else {\n        setLoading(false);\n        setTimeout(() => {\n          setErrMsg(\"\");\n        }, 3000);\n      }\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoading(false);\n    });\n  };\n\n  const onStore = data => {\n    propertyService.storeOrUpdateProperties(data, props.editProperty.id).then(res => {\n      if (res.code === '0000') {\n        dispatch(loadProperties());\n        props.cancelModal();\n        resetForm();\n      }\n    });\n  };\n\n  const resetForm = () => {\n    setTimeout(() => {\n      form.resetFields();\n      handleAddress();\n      setLoading(false);\n      setContactChecked(false);\n      setErrMsg(\"\");\n    }, 500);\n  };\n\n  const onChangeCheckBox = e => {\n    setContactChecked(e.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(PropertyModalWrapper, {\n    forceRender: true,\n    visible: props.visible,\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.propertyDetail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 14\n      }\n    }),\n    onCancel: cancelModal,\n    footer: [/*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      loading: loading,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    name: \"addProperty\",\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    initialValues: {\n      use_my_account: false\n    },\n    fields: fields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, errMsg && /*#__PURE__*/React.createElement(Alert, {\n    message: errMsg,\n    type: \"error\",\n    style: {\n      margin: '15px 15px 0 15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"name\",\n    className: \"isoInputWrapper\",\n    label: \"Property Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your property name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your property name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"address\",\n    className: \"isoInputWrapper\",\n    label: \"Address\",\n    rules: [{\n      required: true,\n      message: 'Please input your address'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    className: \"pac-target-input\",\n    size: \"large\",\n    placeholder: \"Input your address\",\n    ref: autoCompleteRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"country\",\n    className: \"isoInputWrapper\",\n    label: \"Country\",\n    rules: [{\n      required: true,\n      message: 'Please input your country'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"state\",\n    className: \"isoInputWrapper\",\n    label: \"State\",\n    rules: [{\n      required: true,\n      message: 'Please input your state'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyPage.modal.contactInfomation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 16\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"use_my_account\",\n    className: \"isoInputWrapper\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Checkbox, {\n    className: \"checkbox-contact\",\n    onChange: onChangeCheckBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"Use my account\")), !contactChecked && /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"contact_name\",\n    className: \"isoInputWrapper\",\n    label: \"Contact Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your contact name\",\n    disabled: contactChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"contact_email\",\n    className: \"isoInputWrapper\",\n    label: \"Contact Email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid Email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your contact email\",\n    disabled: contactChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  })))))));\n};\n\nexport default PropertyModal;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/Property/PropertyModal.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","propertyService","googleService","propertyActions","IntlMessages","PropertyModalWrapper","_","Alert","loadProperties","autoComplete","handleAddressAutoComplete","setAddress","autoCompleteRef","setAddressShortName","setPoint","window","google","maps","places","Autocomplete","current","input","types","setFields","addListener","handlePlaceSelect","addressObject","getPlace","fields","name","value","formatted_address","i","address_components","length","addressType","push","long_name","PropertyModal","props","dispatch","form","useForm","loading","setLoading","contactChecked","setContactChecked","currentUser","state","user","errMsg","setErrMsg","document","addEventListener","handleAddress","editProperty","address","country","contact_name","contact_email","email","Object","keys","cancelModal","resetForm","handleSubmit","e","validateFields","then","values","res","getLatLng","point","addressShortName","results","geometry","lat","location","lng","addressComponents","indexCountry","findIndex","indexState","short_name","data","property","assign","onStore","setTimeout","catch","info","console","log","storeOrUpdateProperties","id","code","resetFields","onChangeCheckBox","target","checked","visible","use_my_account","margin","required","message","span","offset","type"],"mappings":"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","sourcesContent":["import React , { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport { propertyService, googleService } from '@iso/services';\nimport propertyActions from '@iso/redux/property/actions';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyModalWrapper from './PropertyModal.styles';\nimport { Checkbox } from 'antd';\nimport _ from 'lodash';\nimport Alert from '@iso/components/Feedback/Alert';\n\nconst { loadProperties } = propertyActions;\n\nlet autoComplete;\n\nfunction handleAddressAutoComplete(setAddress, autoCompleteRef, setAddressShortName, setPoint) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current.input,\n    { types: ['address'] }\n  );\n\n  autoComplete.setFields(['address_components', 'formatted_address']);\n  autoComplete.addListener(\"place_changed\", () => {\n    handlePlaceSelect(setAddress, setAddressShortName, setPoint)\n  });\n}\n\nasync function handlePlaceSelect(setAddress, setAddressShortName, setPoint) {\n  const addressObject = autoComplete.getPlace();\n  const fields = [\n    {\n      name: 'address',\n      value: addressObject.formatted_address,\n    },\n  ]\n  for (var i = 0; i < addressObject.address_components.length; i++) {\n    var addressType = addressObject.address_components[i].types[0];\n    if (addressType === \"country\") {\n      fields.push({\n        name: 'country',\n        value: addressObject.address_components[i].long_name\n      });\n    }\n    if (addressType === \"administrative_area_level_1\"){\n      fields.push({\n        name: 'state',\n        value: addressObject.address_components[i].long_name\n      });\n    }\n  }\n  setAddress(fields);\n}\n\nconst PropertyModal = (props) => {\n  const dispatch = useDispatch();\n  const autoCompleteRef = useRef(null);\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [contactChecked, setContactChecked] = useState(false);\n  const currentUser = useSelector((state) => state.user.user);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  useEffect(() => {\n    if(autoCompleteRef){\n      document.addEventListener('google-script-loaded', handleAddress)\n    }\n  }, []);\n\n  useEffect(() => {\n    setFields([\n      {\n        name: 'address',\n        value: props.editProperty.address,\n      },\n      {\n        name: 'country',\n        value: props.editProperty.country,\n      },\n      {\n        name: 'state',\n        value: props.editProperty.state,\n      },\n      {\n        name: 'name',\n        value: props.editProperty.name,\n      },\n      {\n        name: 'contact_name',\n        value: props.editProperty.contact_name,\n      },\n      {\n        name: 'contact_email',\n        value: props.editProperty.contact_email,\n      },\n      {\n        name: 'use_my_account',\n        value: currentUser.email === props.editProperty.contact_email,\n      },\n    ]);\n\n    if(Object.keys(props.editProperty).length > 0){\n      if(currentUser.email === props.editProperty.contact_email){\n        setContactChecked(true);\n      } else {\n        setContactChecked(false);\n      }\n    }\n  }, [props, currentUser]);\n\n  const handleAddress = () => {\n    handleAddressAutoComplete(setFields, autoCompleteRef)\n  }\n\n  const cancelModal = () => {\n    props.cancelModal();\n    resetForm();\n  }\n\n  const handleSubmit = (e) => {\n    setLoading(true);\n\n    form\n      .validateFields()\n      .then(async (values) => {\n        const res = await googleService.getLatLng(values.address);\n\n        var point = {};\n        var addressShortName = {};\n\n        if(res.results.length > 0 && res.results[0].geometry){\n          point = {\n            lat: res.results[0].geometry.location.lat,\n            lng: res.results[0].geometry.location.lng,\n          };\n\n          const addressComponents = res.results[0].address_components;\n          const indexCountry = _.findIndex(addressComponents, function(address) { return address.types[0] === 'country'; });\n          const indexState = _.findIndex(addressComponents, function(address) { return address.types[0] === 'administrative_area_level_1'; });\n          addressShortName = {\n            country: addressComponents[indexCountry].short_name || '',\n            state: addressComponents[indexState].short_name || '',\n          }\n        } else {\n          setErrMsg(\"The address invalid\");\n        }\n\n        const data = {\n          property: Object.assign(values, { point }),\n          addressShortName: addressShortName\n        }\n\n        if(Object.keys(addressShortName).length !== 0){\n          onStore(data);\n        } else {\n          setLoading(false);\n          setTimeout(() => {\n            setErrMsg(\"\");\n          }, 3000);\n        }\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoading(false);\n      });\n  }\n\n  const onStore = (data) => {\n    propertyService.storeOrUpdateProperties(data, props.editProperty.id).then(res => {\n      if(res.code === '0000'){\n        dispatch(loadProperties());\n        props.cancelModal();\n        resetForm();\n      }\n    });\n  }\n\n  const resetForm = () => {\n    setTimeout(() => {\n      form.resetFields();\n      handleAddress();\n      setLoading(false);\n      setContactChecked(false);\n      setErrMsg(\"\");\n    }, 500);\n  }\n\n  const onChangeCheckBox = e => {\n    setContactChecked(e.target.checked);\n  }\n\n  return (\n    <PropertyModalWrapper\n      forceRender={true}\n      visible={props.visible}\n      title={<IntlMessages id=\"propertyPage.modal.propertyDetail\" />}\n      onCancel={cancelModal}\n      footer={[\n        <Button key=\"back\" onClick={cancelModal}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" loading={loading} onClick={handleSubmit}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        name=\"addProperty\"\n        layout=\"vertical\"\n        scrollToFirstError\n        initialValues={{\n          use_my_account: false,\n        }}\n        fields={fields}\n      >\n        {\n          errMsg &&\n          <Alert\n            message={errMsg}\n            type=\"error\"\n            style={{margin: '15px 15px 0 15px'}}\n          />\n        }\n        <div className=\"form-body\">\n          <Form.Item\n            name=\"name\"\n            className=\"isoInputWrapper\"\n            label=\"Property Name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your property name',\n              },\n            ]}\n          >\n            <Input size=\"large\" placeholder=\"Input your property name\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"address\"\n            className=\"isoInputWrapper\"\n            label=\"Address\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your address',\n              },\n            ]}\n          >\n            <Input className=\"pac-target-input\" size=\"large\" placeholder=\"Input your address\" ref={autoCompleteRef}/>\n          </Form.Item>\n          <Row>\n            <Col xs={{span: 24}} md={{span: 11}}>\n              <Form.Item\n                name=\"country\"\n                className=\"isoInputWrapper\"\n                label=\"Country\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your country',\n                  },\n                ]}\n              >\n                <Input size=\"large\" placeholder=\"Input your country\"/>\n              </Form.Item>\n            </Col>\n            <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n              <Form.Item\n                name=\"state\"\n                className=\"isoInputWrapper\"\n                label=\"State\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your state',\n                  },\n                ]}\n              >\n                <Input size=\"large\" placeholder=\"Input your state\"/>\n              </Form.Item>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"form-title\">\n          <h3>{<IntlMessages id=\"propertyPage.modal.contactInfomation\" />}</h3>\n        </div>\n        <div className=\"form-body\">\n          <Form.Item\n            name=\"use_my_account\"\n            className=\"isoInputWrapper\"\n            valuePropName=\"checked\"\n          >\n            <Checkbox className=\"checkbox-contact\" onChange={onChangeCheckBox}>Use my account</Checkbox>\n          </Form.Item>\n          {\n            !contactChecked && (\n              <Row>\n                <Col xs={{span: 24}} md={{span: 11}}>\n                  <Form.Item\n                    name=\"contact_name\"\n                    className=\"isoInputWrapper\"\n                    label=\"Contact Name\"\n                  >\n                    <Input size=\"large\" placeholder=\"Input your contact name\" disabled={contactChecked}/>\n                  </Form.Item>\n                </Col>\n                <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n                  <Form.Item\n                    name=\"contact_email\"\n                    className=\"isoInputWrapper\"\n                    label=\"Contact Email\"\n                    rules={[\n                      {\n                        type: 'email',\n                        message: 'The input is not valid Email!',\n                      },\n                    ]}\n                  >\n                    <Input size=\"large\" placeholder=\"Input your contact email\" disabled={contactChecked}/>\n                  </Form.Item>\n                </Col>\n              </Row>\n            )\n          }\n        </div>\n      </Form>\n    </PropertyModalWrapper>\n  );\n}\n\nexport default PropertyModal;"]},"metadata":{},"sourceType":"module"}