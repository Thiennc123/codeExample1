{"ast":null,"code":"const sortOption = {};\n\nclass fakeData {\n  constructor(size, data) {\n    this.size = size || 0;\n    this.datas = data.map((row, index) => {\n      row['key'] = `${index}`;\n      return row;\n    });\n    this.sortKey = null;\n    this.sortDir = null;\n  }\n\n  dataModel(index) {\n    return [];\n  }\n\n  getObjectAt(index) {\n    if (index < 0 || index > this.size) {\n      return undefined;\n    }\n\n    if (this.datas[index] === undefined) {\n      this.datas[index] = this.dataModel(index);\n    }\n\n    return this.datas[index];\n  }\n\n  getAll() {\n    if (this.datas.length < this.size) {\n      for (let i = 0; i < this.size; i++) {\n        this.getObjectAt(i);\n      }\n    }\n\n    return this.datas.slice();\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  getSortAsc(sortKey) {\n    sortOption.sortKey = sortKey;\n    sortOption.sortDir = 'ASC';\n    return this.datas.sort(this.sort);\n  }\n\n  getSortDesc(sortKey) {\n    sortOption.sortKey = sortKey;\n    sortOption.sortDir = 'DESC';\n    return this.datas.sort(this.sort);\n  }\n\n  sort(optionA, optionB) {\n    const valueA = optionA[sortOption.sortKey].toUpperCase();\n    const valueB = optionB[sortOption.sortKey].toUpperCase();\n    let sortVal = 0;\n\n    if (valueA > valueB) {\n      sortVal = 1;\n    }\n\n    if (valueA < valueB) {\n      sortVal = -1;\n    }\n\n    if (sortVal !== 0 && sortOption.sortDir === 'DESC') {\n      return sortVal * -1;\n    }\n\n    return sortVal;\n  }\n\n}\n\nexport default fakeData;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/components/Tables/data.js"],"names":["sortOption","fakeData","constructor","size","data","datas","map","row","index","sortKey","sortDir","dataModel","getObjectAt","undefined","getAll","length","i","slice","getSize","getSortAsc","sort","getSortDesc","optionA","optionB","valueA","toUpperCase","valueB","sortVal"],"mappings":"AAAA,MAAMA,UAAU,GAAG,EAAnB;;AAEA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;AACtB,SAAKD,IAAL,GAAYA,IAAI,IAAI,CAApB;AACA,SAAKE,KAAL,GAAaD,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpCD,MAAAA,GAAG,CAAC,KAAD,CAAH,GAAc,GAAEC,KAAM,EAAtB;AACA,aAAOD,GAAP;AACD,KAHY,CAAb;AAIA,SAAKE,OAAL,GAAe,IAAf;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;AACDC,EAAAA,SAAS,CAACH,KAAD,EAAQ;AACf,WAAO,EAAP;AACD;;AACDI,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,KAAKL,IAA9B,EAAoC;AAClC,aAAOU,SAAP;AACD;;AACD,QAAI,KAAKR,KAAL,CAAWG,KAAX,MAAsBK,SAA1B,EAAqC;AACnC,WAAKR,KAAL,CAAWG,KAAX,IAAoB,KAAKG,SAAL,CAAeH,KAAf,CAApB;AACD;;AACD,WAAO,KAAKH,KAAL,CAAWG,KAAX,CAAP;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKT,KAAL,CAAWU,MAAX,GAAoB,KAAKZ,IAA7B,EAAmC;AACjC,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,IAAzB,EAA+Ba,CAAC,EAAhC,EAAoC;AAClC,aAAKJ,WAAL,CAAiBI,CAAjB;AACD;AACF;;AACD,WAAO,KAAKX,KAAL,CAAWY,KAAX,EAAP;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKf,IAAZ;AACD;;AACDgB,EAAAA,UAAU,CAACV,OAAD,EAAU;AAClBT,IAAAA,UAAU,CAACS,OAAX,GAAqBA,OAArB;AACAT,IAAAA,UAAU,CAACU,OAAX,GAAqB,KAArB;AACA,WAAO,KAAKL,KAAL,CAAWe,IAAX,CAAgB,KAAKA,IAArB,CAAP;AACD;;AACDC,EAAAA,WAAW,CAACZ,OAAD,EAAU;AACnBT,IAAAA,UAAU,CAACS,OAAX,GAAqBA,OAArB;AACAT,IAAAA,UAAU,CAACU,OAAX,GAAqB,MAArB;AACA,WAAO,KAAKL,KAAL,CAAWe,IAAX,CAAgB,KAAKA,IAArB,CAAP;AACD;;AACDA,EAAAA,IAAI,CAACE,OAAD,EAAUC,OAAV,EAAmB;AACrB,UAAMC,MAAM,GAAGF,OAAO,CAACtB,UAAU,CAACS,OAAZ,CAAP,CAA4BgB,WAA5B,EAAf;AACA,UAAMC,MAAM,GAAGH,OAAO,CAACvB,UAAU,CAACS,OAAZ,CAAP,CAA4BgB,WAA5B,EAAf;AACA,QAAIE,OAAO,GAAG,CAAd;;AACA,QAAIH,MAAM,GAAGE,MAAb,EAAqB;AACnBC,MAAAA,OAAO,GAAG,CAAV;AACD;;AACD,QAAIH,MAAM,GAAGE,MAAb,EAAqB;AACnBC,MAAAA,OAAO,GAAG,CAAC,CAAX;AACD;;AACD,QAAIA,OAAO,KAAK,CAAZ,IAAiB3B,UAAU,CAACU,OAAX,KAAuB,MAA5C,EAAoD;AAClD,aAAOiB,OAAO,GAAG,CAAC,CAAlB;AACD;;AACD,WAAOA,OAAP;AACD;;AA1DY;;AA4Df,eAAe1B,QAAf","sourcesContent":["const sortOption = {};\n\nclass fakeData {\n  constructor(size, data) {\n    this.size = size || 0;\n    this.datas = data.map((row, index) => {\n      row['key'] = `${index}`;\n      return row;\n    });\n    this.sortKey = null;\n    this.sortDir = null;\n  }\n  dataModel(index) {\n    return [];\n  }\n  getObjectAt(index) {\n    if (index < 0 || index > this.size) {\n      return undefined;\n    }\n    if (this.datas[index] === undefined) {\n      this.datas[index] = this.dataModel(index);\n    }\n    return this.datas[index];\n  }\n  getAll() {\n    if (this.datas.length < this.size) {\n      for (let i = 0; i < this.size; i++) {\n        this.getObjectAt(i);\n      }\n    }\n    return this.datas.slice();\n  }\n\n  getSize() {\n    return this.size;\n  }\n  getSortAsc(sortKey) {\n    sortOption.sortKey = sortKey;\n    sortOption.sortDir = 'ASC';\n    return this.datas.sort(this.sort);\n  }\n  getSortDesc(sortKey) {\n    sortOption.sortKey = sortKey;\n    sortOption.sortDir = 'DESC';\n    return this.datas.sort(this.sort);\n  }\n  sort(optionA, optionB) {\n    const valueA = optionA[sortOption.sortKey].toUpperCase();\n    const valueB = optionB[sortOption.sortKey].toUpperCase();\n    let sortVal = 0;\n    if (valueA > valueB) {\n      sortVal = 1;\n    }\n    if (valueA < valueB) {\n      sortVal = -1;\n    }\n    if (sortVal !== 0 && sortOption.sortDir === 'DESC') {\n      return sortVal * -1;\n    }\n    return sortVal;\n  }\n}\nexport default fakeData;\n"]},"metadata":{},"sourceType":"module"}