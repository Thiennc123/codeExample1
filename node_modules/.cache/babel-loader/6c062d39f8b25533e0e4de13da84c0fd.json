{"ast":null,"code":"var _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/Mob/Mob.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Marker } from 'react-leaflet';\nimport MobModal from './MobModal';\nimport { mobService, primaryObjectService } from '@iso/services';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\nimport btnSaveAction from '@iso/redux/btnSave/actions';\nimport { IconMob } from '../../Icons/IconMob';\nimport _ from 'lodash';\nconst {\n  show\n} = btnSaveAction;\nconst {\n  openModal\n} = modalActions;\n\nconst Mob = props => {\n  const [mobs, setMobs] = useState({});\n  const objectRef = React.useRef([]);\n  const dispatch = useDispatch();\n  const [dataMob, setDataMob] = useState({});\n  const [primaryObjects, setPrimaryObjects] = useState([]);\n  const saveSuccess = useSelector(state => state.btnSave.saveSuccess);\n  const dataBtnSave = useSelector(state => state.btnSave.data);\n  const cancelSave = useSelector(state => state.btnSave.cancelSave);\n  const dataTransfer = useSelector(state => state.btnSave.data);\n  const modalData = useSelector(state => state.modal.modalData);\n  const updateDataMobs = React.useCallback(propertyId => {\n    mobService.getList(propertyId).then(res => {\n      if (res.code === '0000') {\n        setMobs(res.mobs);\n      }\n    });\n  }, [props.primaryObjects]);\n  useEffect(() => {\n    if (saveSuccess && dataBtnSave.type === 'area') {\n      const primaryObjectId = dataBtnSave.dataId;\n      setTimeout(() => {\n        updateDataMobs(props.propertyId);\n      }, 500);\n    }\n  }, [saveSuccess, dataBtnSave]);\n  useEffect(() => {\n    setPrimaryObjects(props.primaryObjects);\n  }, [props.primaryObjects]);\n  useEffect(() => {\n    if (props.propertyId) {\n      updateDataMobs(props.propertyId);\n    }\n  }, [updateDataMobs, props.propertyId]);\n  const saveLocation = React.useCallback((mob, dataTransfer) => {\n    var layer = objectRef.current[mob.id].leafletElement;\n    var point = dataTransfer.points;\n    const data = {\n      mob: { ...mob,\n        point\n      }\n    };\n    mobService.storeOrUpdate(data, mob.id).then(res => {\n      if (res.code === '0000') {\n        updateDataMobs(res.mob.property_id);\n        layer.editing.disable();\n      }\n    });\n  }, []);\n  const cancelSaveArea = React.useCallback((propertyId, dataObjectId) => {\n    var layer = objectRef.current[dataObjectId].leafletElement;\n    layer.editing.disable();\n  }, []);\n  useEffect(() => {\n    if (saveSuccess && dataTransfer.type === 'mob' && dataMob) {\n      saveLocation(dataMob, dataTransfer);\n    } else if (cancelSave && dataTransfer.type === 'mob') {\n      cancelSaveArea(props.propertyId, dataMob.id);\n    }\n  }, [saveSuccess, saveLocation, dataTransfer, props.propertyId, cancelSave, dataMob]);\n\n  const handleShowMobs = data => {\n    var html = [];\n\n    if (data.length > 0) {\n      _.forEach(data, function (mob) {\n        html.push( /*#__PURE__*/React.createElement(Marker, {\n          key: mob.id,\n          position: [mob.lat, mob.lng],\n          icon: IconMob(mob.tag_colour),\n          onClick: handleClickMob.bind(this, mob),\n          onRemove: handleRemoveMob.bind(this, mob),\n          ref: el => objectRef.current[mob.id] = el,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        }));\n      });\n    }\n\n    return html;\n  };\n\n  const handleClickMob = (object, e) => {\n    //Not trigger anything if on deleted state\n    if (!props.controlDraw.current.leafletElement._toolbars.edit._modes.remove.handler._enabled) {\n      const modalData = {\n        object,\n        type: 'mob',\n        canCreate: true\n      };\n      dispatch(openModal(modalData));\n    }\n  };\n\n  const handleRemoveMob = (object, e) => {\n    props.handleSetDeletedMobs(object.id);\n  };\n\n  const onSaved = savedMob => {\n    let mobTmps = _.clone(mobs);\n\n    const mobIndex = _.findIndex(mobTmps, mob => {\n      return mob.id === savedMob.id;\n    });\n\n    if (mobIndex === -1) {\n      mobTmps.push(savedMob);\n    } else {\n      mobTmps[mobIndex] = savedMob;\n    }\n\n    setMobs(mobTmps);\n  };\n\n  const editLocation = () => {\n    const data = {\n      objectRef,\n      dataId: modalData.object.id,\n      type: 'mob'\n    };\n    dispatch(show(data));\n    setDataMob(modalData.object);\n    objectRef.current[modalData.object.id].leafletElement.editing.enable();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, handleShowMobs(mobs), /*#__PURE__*/React.createElement(MobModal, {\n    updateDataMobs: updateDataMobs,\n    propertyId: props.propertyId,\n    editLocation: editLocation,\n    primaryObjects: primaryObjects,\n    onSaved: onSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Mob;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/Mob/Mob.js"],"names":["React","useState","useEffect","Marker","MobModal","mobService","primaryObjectService","useSelector","useDispatch","modalActions","btnSaveAction","IconMob","_","show","openModal","Mob","props","mobs","setMobs","objectRef","useRef","dispatch","dataMob","setDataMob","primaryObjects","setPrimaryObjects","saveSuccess","state","btnSave","dataBtnSave","data","cancelSave","dataTransfer","modalData","modal","updateDataMobs","useCallback","propertyId","getList","then","res","code","type","primaryObjectId","dataId","setTimeout","saveLocation","mob","layer","current","id","leafletElement","point","points","storeOrUpdate","property_id","editing","disable","cancelSaveArea","dataObjectId","handleShowMobs","html","length","forEach","push","lat","lng","tag_colour","handleClickMob","bind","handleRemoveMob","el","object","e","controlDraw","_toolbars","edit","_modes","remove","handler","_enabled","canCreate","handleSetDeletedMobs","onSaved","savedMob","mobTmps","clone","mobIndex","findIndex","editLocation","enable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Marker } from 'react-leaflet';\nimport MobModal from './MobModal';\nimport { mobService, primaryObjectService } from '@iso/services';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\nimport btnSaveAction from '@iso/redux/btnSave/actions';\nimport {  IconMob  } from '../../Icons/IconMob';\nimport _ from 'lodash';\n\nconst { show } = btnSaveAction;\n\nconst { openModal } = modalActions;\n\nconst Mob = (props) => {\n  const [mobs, setMobs] = useState({});\n  const objectRef = React.useRef([]);\n  const dispatch = useDispatch();\n\n  const [dataMob, setDataMob] = useState({});\n  const [primaryObjects, setPrimaryObjects] = useState([]);\n  const saveSuccess = useSelector((state) => state.btnSave.saveSuccess);\n  const dataBtnSave = useSelector((state) => state.btnSave.data);\n  const cancelSave = useSelector((state) => state.btnSave.cancelSave);\n  const dataTransfer = useSelector((state) => state.btnSave.data);\n  const modalData = useSelector((state) => state.modal.modalData);\n\n  const updateDataMobs = React.useCallback((propertyId) => {\n    mobService.getList(propertyId).then(res => {\n      if(res.code === '0000'){\n        setMobs(res.mobs);\n      }\n    })\n  }, [props.primaryObjects]);\n\n  useEffect(() => {\n    if(saveSuccess && dataBtnSave.type === 'area'){\n      const primaryObjectId = dataBtnSave.dataId;\n      setTimeout(() => {\n        updateDataMobs(props.propertyId)\n      }, 500);\n    }\n  }, [saveSuccess, dataBtnSave]);\n\n  useEffect(() => {\n    setPrimaryObjects(props.primaryObjects);\n  }, [props.primaryObjects]);\n\n  useEffect(() => {\n    if(props.propertyId){\n      updateDataMobs(props.propertyId);\n    }\n  }, [updateDataMobs, props.propertyId]);\n\n  const saveLocation = React.useCallback((mob, dataTransfer) => {\n    var layer = objectRef.current[mob.id].leafletElement;\n\n    var point = dataTransfer.points;\n\n    const data = {\n      mob:{\n        ...mob,\n        point\n      }\n    }\n    mobService.storeOrUpdate(data, mob.id).then(res => {\n      if(res.code === '0000'){\n        updateDataMobs(res.mob.property_id)\n        layer.editing.disable();\n      }\n    });\n\n  }, []);\n\n  const cancelSaveArea = React.useCallback((propertyId, dataObjectId) => {\n    var layer = objectRef.current[dataObjectId].leafletElement;\n    layer.editing.disable();\n  }, []);\n\n  useEffect(() => {\n    if(saveSuccess && dataTransfer.type === 'mob' && dataMob){\n      saveLocation(dataMob, dataTransfer);\n    } else if (cancelSave && dataTransfer.type === 'mob'){\n      cancelSaveArea(props.propertyId, dataMob.id);\n    }\n  }, [saveSuccess, saveLocation, dataTransfer, props.propertyId, cancelSave, dataMob])\n\n\n  const handleShowMobs = (data) => {\n    var html = [];\n    if(data.length > 0){\n      _.forEach(data, function(mob){\n        html.push(\n          <Marker \n            key={mob.id} \n            position={[mob.lat, mob.lng]}\n            icon={IconMob(mob.tag_colour)}\n            onClick={handleClickMob.bind(this, mob)}\n            onRemove={handleRemoveMob.bind(this, mob)}\n            ref={el => (objectRef.current[mob.id] = el)}            \n          />\n        );\n      });\n    }\n    return html;\n  }\n\n  const handleClickMob = (object, e) => {\n    //Not trigger anything if on deleted state\n    if(!props.controlDraw.current.leafletElement._toolbars.edit._modes.remove.handler._enabled){\n      const modalData = {\n        object,\n        type: 'mob',\n        canCreate: true\n      }\n      dispatch(openModal(modalData));\n    }\n  }\n\n  const handleRemoveMob = (object, e) => {\n    props.handleSetDeletedMobs(object.id);    \n  }\n\n  const onSaved = (savedMob) => {\n    let mobTmps = _.clone(mobs);\n    const mobIndex = _.findIndex(mobTmps, (mob) => {\n      return mob.id === savedMob.id\n    });\n    if(mobIndex === -1){\n      mobTmps.push(savedMob);\n    } else {\n      mobTmps[mobIndex] = savedMob;\n    }\n    setMobs(mobTmps);\n  }\n\n  const editLocation = () => {\n    const data = {\n      objectRef,\n      dataId: modalData.object.id,\n      type: 'mob'\n    }\n    dispatch(show(data));\n    setDataMob(modalData.object);\n    objectRef.current[modalData.object.id].leafletElement.editing.enable();\n  }\n\n  return (\n    <>\n      {handleShowMobs(mobs)}\n      <MobModal        \n        updateDataMobs={updateDataMobs}\n        propertyId={props.propertyId}\n        editLocation={editLocation}\n        primaryObjects={primaryObjects}\n        onSaved={onSaved}\n      />\n    </>\n  )\n}\n\nexport default Mob;"]},"metadata":{},"sourceType":"module"}