{"ast":null,"code":"var wgs84 = require('wgs84');\n\nmodule.exports.heading = function (from, to) {\n  var y = Math.sin(Math.PI * (from[0] - to[0]) / 180) * Math.cos(Math.PI * to[1] / 180);\n  var x = Math.cos(Math.PI * from[1] / 180) * Math.sin(Math.PI * to[1] / 180) - Math.sin(Math.PI * from[1] / 180) * Math.cos(Math.PI * to[1] / 180) * Math.cos(Math.PI * (from[0] - to[0]) / 180);\n  return 180 * Math.atan2(y, x) / Math.PI;\n};\n\nmodule.exports.distance = function (from, to) {\n  var sinHalfDeltaLon = Math.sin(Math.PI * (to[0] - from[0]) / 360);\n  var sinHalfDeltaLat = Math.sin(Math.PI * (to[1] - from[1]) / 360);\n  var a = sinHalfDeltaLat * sinHalfDeltaLat + sinHalfDeltaLon * sinHalfDeltaLon * Math.cos(Math.PI * from[1] / 180) * Math.cos(Math.PI * to[1] / 180);\n  return 2 * wgs84.RADIUS * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n};\n\nmodule.exports.radial = function (from, tc_deg, d_m, wrap) {\n  var tc = rad(tc_deg);\n  var d = d_m / wgs84.RADIUS;\n  var lon1 = rad(from[0]),\n      lat1 = rad(from[1]);\n  var lat = Math.asin(Math.sin(lat1) * Math.cos(d) + Math.cos(lat1) * Math.sin(d) * Math.cos(tc));\n  var dlon = Math.atan2(Math.sin(tc) * Math.sin(d) * Math.cos(lat1), Math.cos(d) - Math.sin(lat1) * Math.sin(lat));\n  var lon;\n\n  if (wrap) {\n    lon = (lon1 - dlon + Math.PI) % (2 * Math.PI) - Math.PI;\n  } else {\n    lon = lon1 - dlon + Math.PI - Math.PI;\n  }\n\n  return [deg(lon), deg(lat)];\n};\n\nfunction rad(_) {\n  return _ * (Math.PI / 180);\n}\n\nfunction deg(_) {\n  return _ * (180 / Math.PI);\n}","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/node_modules/spherical/index.js"],"names":["wgs84","require","module","exports","heading","from","to","y","Math","sin","PI","cos","x","atan2","distance","sinHalfDeltaLon","sinHalfDeltaLat","a","RADIUS","sqrt","radial","tc_deg","d_m","wrap","tc","rad","d","lon1","lat1","lat","asin","dlon","lon","deg","_"],"mappings":"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","sourcesContent":["var wgs84 = require('wgs84');\n\nmodule.exports.heading = function(from, to) {\n    var y = Math.sin(Math.PI * (from[0] - to[0]) / 180) * Math.cos(Math.PI * to[1] / 180);\n    var x = Math.cos(Math.PI * from[1] / 180) * Math.sin(Math.PI * to[1] / 180) -\n        Math.sin(Math.PI * from[1] / 180) * Math.cos(Math.PI * to[1] / 180) * Math.cos(Math.PI * (from[0] - to[0]) / 180);\n    return 180 * Math.atan2(y, x) / Math.PI;\n};\n\nmodule.exports.distance = function(from, to) {\n    var sinHalfDeltaLon = Math.sin(Math.PI * (to[0] - from[0]) / 360);\n    var sinHalfDeltaLat = Math.sin(Math.PI * (to[1] - from[1]) / 360);\n    var a = sinHalfDeltaLat * sinHalfDeltaLat +\n        sinHalfDeltaLon * sinHalfDeltaLon * Math.cos(Math.PI * from[1] / 180) * Math.cos(Math.PI * to[1] / 180);\n    return 2 * wgs84.RADIUS * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n};\n\nmodule.exports.radial = function(from, tc_deg, d_m, wrap) {\n    var tc = rad(tc_deg);\n    var d = d_m / wgs84.RADIUS;\n\n    var lon1 = rad(from[0]),\n        lat1 = rad(from[1]);\n\n    var lat = Math.asin(\n        Math.sin(lat1) *\n        Math.cos(d) +\n        Math.cos(lat1) *\n        Math.sin(d) *\n        Math.cos(tc));\n\n    var dlon = Math.atan2(\n        Math.sin(tc) *\n        Math.sin(d) *\n        Math.cos(lat1),\n        Math.cos(d) -\n        Math.sin(lat1) *\n        Math.sin(lat));\n\n    var lon;\n    if (wrap) {\n        lon = (lon1 - dlon + Math.PI) %\n            (2 * Math.PI) - Math.PI;\n    } else {\n        lon = (lon1 - dlon + Math.PI) - Math.PI;\n    }\n\n    return [deg(lon), deg(lat)];\n};\n\nfunction rad(_) {\n    return _ * (Math.PI / 180);\n}\n\nfunction deg(_) {\n    return _ * (180 / Math.PI);\n}\n"]},"metadata":{},"sourceType":"script"}