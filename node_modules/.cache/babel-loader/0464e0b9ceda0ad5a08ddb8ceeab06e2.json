{"ast":null,"code":"var _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport Box from '@iso/components/utility/box';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { useSelector } from 'react-redux';\nimport { propertyService } from '@iso/services';\n\nconst BlankPage = () => {\n  const activePropertyId = useSelector(state => state.property.activePropertyId);\n  const [property, setProperty] = useState({});\n  useEffect(() => {\n    if (activePropertyId) {\n      propertyService.viewProperty(activePropertyId).then(res => {\n        if (res.code === '0000') {\n          setProperty(res.property);\n        }\n      });\n    }\n  }, [activePropertyId]);\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyPage.dashboard.header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Name: \", property ? property.name : ''), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Number: \", property ? property.number : '')));\n};\n\nexport default BlankPage;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","LayoutWrapper","Box","PageHeader","IntlMessages","useSelector","propertyService","BlankPage","activePropertyId","state","property","setProperty","viewProperty","then","res","code","name","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,gBAAgB,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,gBAA3B,CAApC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,gBAAH,EAAoB;AAClBF,MAAAA,eAAe,CAACM,YAAhB,CAA6BJ,gBAA7B,EAA+CK,IAA/C,CAAoDC,GAAG,IAAI;AACzD,YAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrBJ,UAAAA,WAAW,CAACG,GAAG,CAACJ,QAAL,CAAX;AACD;AACF,OAJD;AAKD;AACF,GARQ,EAQN,CAACF,gBAAD,CARM,CAAT;AAUA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWE,QAAQ,GAAGA,QAAQ,CAACM,IAAZ,GAAmB,EAAtC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaN,QAAQ,GAAGA,QAAQ,CAACO,MAAZ,GAAqB,EAA1C,CAFF,CAJF,CADF;AAWD,CAzBD;;AA2BA,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport Box from '@iso/components/utility/box';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { useSelector } from 'react-redux';\nimport { propertyService } from '@iso/services';\n\nconst BlankPage = () => {\n  const activePropertyId = useSelector((state) => state.property.activePropertyId);\n  const [property, setProperty] = useState({});\n\n  useEffect(() => {\n    if(activePropertyId){\n      propertyService.viewProperty(activePropertyId).then(res => {\n        if(res.code === '0000'){\n          setProperty(res.property);\n        }\n      });\n    }\n  }, [activePropertyId]);\n\n  return (\n    <LayoutWrapper>\n      <PageHeader>\n        {<IntlMessages id=\"propertyPage.dashboard.header\"/>}\n      </PageHeader>\n      <Box>\n        <h1>Name: {property ? property.name : ''}</h1>\n        <h1>Number: {property ? property.number : ''}</h1>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n\nexport default BlankPage;\n"]},"metadata":{},"sourceType":"module"}