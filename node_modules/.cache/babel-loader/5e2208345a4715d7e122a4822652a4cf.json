{"ast":null,"code":"import \"antd/es/date-picker/style/css\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style/css\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/Mob/MobModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport MobModalWrapper from './MobModal.styles';\nimport BreedModalWrapper from './BreedModal.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\nimport Loader from '@iso/components/utility/loader';\nimport { mobService, breedService } from '@iso/services';\nimport moment from 'moment';\nimport { objectColors } from '@iso/constants/objectColors';\nimport _ from 'lodash';\nimport styled from \"styled-components\";\nimport { dateHelper } from '@iso/lib/helpers/dateHelper';\nimport L from 'leaflet';\nconst {\n  Option\n} = _Select;\nconst {\n  closeModal\n} = modalActions;\nconst {\n  TabPane\n} = _Tabs;\n\nconst MobModal = props => {\n  const [form] = _Form.useForm();\n\n  const [breedForm] = _Form.useForm();\n\n  const [fields, setFields] = useState([]);\n  const dispatch = useDispatch();\n  const modalVisibility = useSelector(state => state.modal.modalVisibility);\n  const modalData = useSelector(state => state.modal.modalData);\n  const [loading, setLoading] = useState(false);\n  const [loadingBreed, setLoadingBreed] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [dataMob, setDataMob] = useState({});\n  const [visibleBreed, setVisibleBreed] = useState(false);\n  const [breeds, setBreeds] = useState({});\n\n  const getRandomLatLng = coordinates => {\n    var polygon = L.polygon([coordinates]);\n    var bounds = polygon.getBounds();\n    var x_max = bounds.getEast();\n    var x_min = bounds.getWest();\n    var y_max = bounds.getSouth();\n    var y_min = bounds.getNorth();\n    var lat = y_min + Math.random() * (y_max - y_min);\n    var lng = x_min + Math.random() * (x_max - x_min);\n    return new L.LatLng(lat, lng);\n  };\n\n  useEffect(() => {\n    if (props.propertyId) {\n      breedService.getList(props.propertyId).then(res => {\n        if (res.code === '0000') {\n          setBreeds(res.breeds);\n          setModalLoading(false);\n        }\n      });\n    }\n  }, [props.propertyId]);\n\n  const cancelModal = () => {\n    dispatch(closeModal());\n\n    if (modalData.layer) {\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n\n    setLoading(false);\n  };\n\n  const handleBreedSubmit = e => {\n    breedForm.validateFields().then(breed_values => {\n      onStoreBreed(breed_values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoadingBreed(false);\n    });\n  };\n\n  const addBreed = (object, e) => {\n    setVisibleBreed(true);\n  };\n\n  const cancelModalBreed = () => {\n    setVisibleBreed(false);\n  };\n\n  const handleSubmit = e => {\n    setLoading(true);\n    form.validateFields().then(values => {\n      onStore(values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoading(false);\n    });\n  };\n\n  const onStore = values => {\n    const selectedObject = _.find(props.primaryObjects, object => {\n      return object.id === values.mob.primary_object_id;\n    });\n\n    let point = getRandomLatLng(selectedObject.area);\n    const data = {\n      mob: { ...values.mob,\n        date_of_birth: values.mob.date_of_birth ? dateHelper.dateForAPI(values.mob.date_of_birth) : '',\n        point,\n        property_id: props.propertyId\n      }\n    };\n    mobService.storeOrUpdate(data, dataMob.id).then(res => {\n      if (res.code === '0000') {\n        props.onSaved(res.mob);\n        cancelModal();\n        form.resetFields();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  const onStoreBreed = breed_values => {\n    const breed_data = {\n      \"breed\": { ...breed_values.breed,\n        property_id: props.propertyId\n      }\n    };\n    breedService.storeOrUpdate(breed_data).then(res => {\n      if (res.code === '0000') {\n        var tmp_breeds = _.clone(breeds);\n\n        tmp_breeds.push(res.breed);\n        setBreeds(tmp_breeds);\n        cancelModalBreed();\n        breedForm.resetFields();\n        setFields([{\n          name: ['mob', 'breed'],\n          value: res.breed.slug\n        }]);\n      } else {\n        setLoadingBreed(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (modalData.type === 'mob') {\n      if (modalData.object) {\n        setDataMob(modalData.object);\n      }\n\n      setFields([{\n        name: ['mob', 'name'],\n        value: modalData.object.name || ''\n      }, {\n        name: ['mob', 'type'],\n        value: modalData.object.type || ''\n      }, {\n        name: ['mob', 'breed'],\n        value: modalData.object.breed || ''\n      }, {\n        name: ['mob', 'tag_colour'],\n        value: modalData.object.tag_colour || 'blue'\n      }, {\n        name: ['mob', 'tag_number_range'],\n        value: modalData.object.tag_number_range || ''\n      }, {\n        name: ['mob', 'date_of_birth'],\n        value: modalData.object.date_of_birth ? moment(modalData.object.date_of_birth) : ''\n      }, {\n        name: ['mob', 'description'],\n        value: modalData.object.description || ''\n      }, {\n        name: ['mob', 'primary_object_id'],\n        value: modalData.object.primary_object_id || ''\n      }]);\n    }\n  }, [props.propertyId, modalVisibility, modalData]);\n\n  const renderOptionsColor = () => {\n    let options = [];\n\n    _.forEach(objectColors, (color, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: color.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ColorItemRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ColorItemPreview, {\n        style: {\n          backgroundColor: color.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, color.label))));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select a color\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const renderOptionsBreed = mob_breed_options => {\n    let breed_options = [];\n\n    _.forEach(mob_breed_options, (breed_opt, index) => {\n      breed_options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: breed_opt.slug,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, breed_opt.name)));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select a breed\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, breed_options);\n  };\n\n  const editLocation = () => {\n    cancelModal();\n    props.editLocation();\n  };\n\n  const renderOptionObject = objects => {\n    let options = [];\n\n    _.forEach(objects, (object, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: object.id,\n        value: object.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, object.name));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select an object\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MobModalWrapper, {\n    visible: modalVisibility && modalData.type === 'mob',\n    onCancel: cancelModal,\n    maskClosable: false,\n    title: dataMob.id ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.mob.editMob\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.mob.addMob\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 81\n      }\n    }),\n    footer: [/*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      onClick: handleSubmit,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Tabs, {\n    defaultActiveKey: \"1\",\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.mobModal.detailTab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 27\n      }\n    }),\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, modalLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    fields: fields,\n    id: \"#1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'name'],\n    className: \"isoInputWrapper\",\n    label: \"Name\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input mob name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 15\n    },\n    md: {\n      span: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'breed'],\n    className: \"isoInputWrapper\",\n    label: \"Breed\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 27\n    }\n  }, renderOptionsBreed(breeds))), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 7,\n      offset: 2\n    },\n    md: {\n      span: 5,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    key: \"submit\",\n    className: \"btn-create-breed\",\n    type: \"primary\",\n    onClick: addBreed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyPage.modal.breed.addBreed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 30\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'date_of_birth'],\n    className: \"isoInputWrapper\",\n    label: \"Date Of Birth\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_DatePicker, {\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 30\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'type'],\n    className: \"isoInputWrapper\",\n    label: \"Type\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input mob type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'tag_colour'],\n    className: \"isoInputWrapper\",\n    label: \"Tag Colour\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 27\n    }\n  }, renderOptionsColor())), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'tag_number_range'],\n    className: \"isoInputWrapper\",\n    label: \"Tag Number Range\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input tag number range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  })))), !modalData.canCreate || dataMob.id ? /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'primary_object_id'],\n    className: \"isoInputWrapper\",\n    label: \"Object\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 23\n    }\n  }, renderOptionObject(props.primaryObjects)) : '', /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['mob', 'description'],\n    className: \"isoInputWrapper\",\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.mobModal.livestockTab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 27\n      }\n    }),\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, \"Content of Livestock Tab\"))), /*#__PURE__*/React.createElement(BreedModalWrapper, {\n    visible: visibleBreed,\n    onCancel: cancelModalBreed,\n    centered: true,\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.breed.addBreed.title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }),\n    footer: [/*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModalBreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      onClick: handleBreedSubmit,\n      loading: loadingBreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 5\n    }\n  }, modalLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(_Form, {\n    form: breedForm,\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['breed', 'name'],\n    className: \"isoInputWrapper\",\n    label: \"Breed\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input breed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default MobModal;\nconst ColorItemRow = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  div{\n    margin: 4px;\n  }\n`;\nconst ColorItemPreview = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n`;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/Mob/MobModal.js"],"names":["React","useState","useEffect","IntlMessages","MobModalWrapper","BreedModalWrapper","useSelector","useDispatch","modalActions","Loader","mobService","breedService","moment","objectColors","_","styled","dateHelper","L","Option","closeModal","TabPane","MobModal","props","form","useForm","breedForm","fields","setFields","dispatch","modalVisibility","state","modal","modalData","loading","setLoading","loadingBreed","setLoadingBreed","modalLoading","setModalLoading","dataMob","setDataMob","visibleBreed","setVisibleBreed","breeds","setBreeds","getRandomLatLng","coordinates","polygon","bounds","getBounds","x_max","getEast","x_min","getWest","y_max","getSouth","y_min","getNorth","lat","Math","random","lng","LatLng","propertyId","getList","then","res","code","cancelModal","layer","featureGroup","leafletElement","removeLayer","handleBreedSubmit","e","validateFields","breed_values","onStoreBreed","catch","info","console","log","addBreed","object","cancelModalBreed","handleSubmit","values","onStore","selectedObject","find","primaryObjects","id","mob","primary_object_id","point","area","data","date_of_birth","dateForAPI","property_id","storeOrUpdate","onSaved","resetFields","breed_data","breed","tmp_breeds","clone","push","name","value","slug","type","tag_colour","tag_number_range","description","renderOptionsColor","options","forEach","color","index","backgroundColor","label","renderOptionsBreed","mob_breed_options","breed_options","breed_opt","editLocation","renderOptionObject","objects","required","message","span","offset","width","canCreate","ColorItemRow","div","ColorItemPreview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport MobModalWrapper from './MobModal.styles';\nimport BreedModalWrapper from './BreedModal.styles';\nimport { Form, Input, Button, Select, Row, Col, DatePicker, Tabs } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\nimport Loader from '@iso/components/utility/loader';\nimport { mobService, breedService,  } from '@iso/services';\nimport moment from 'moment';\nimport { objectColors } from '@iso/constants/objectColors';\nimport _ from 'lodash';\nimport styled from \"styled-components\";\nimport { dateHelper } from '@iso/lib/helpers/dateHelper';\nimport L from 'leaflet';\n\nconst { Option } = Select;\nconst { closeModal } = modalActions;\nconst { TabPane } = Tabs;\n\nconst MobModal = (props) => {\n  const [form] = Form.useForm();\n  const [breedForm] = Form.useForm();\n  const [fields, setFields] = useState([]);\n  const dispatch = useDispatch();\n  const modalVisibility = useSelector((state) => state.modal.modalVisibility);\n  const modalData = useSelector((state) => state.modal.modalData);\n  const [loading, setLoading] = useState(false);\n  const [loadingBreed, setLoadingBreed] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [dataMob, setDataMob] = useState({});\n  const [visibleBreed, setVisibleBreed] = useState(false);\n  const [breeds, setBreeds] = useState({});\n\n  const getRandomLatLng = (coordinates) => {\n    var polygon = L.polygon([\n      coordinates\n    ]);\n    var bounds = polygon.getBounds();\n    var x_max = bounds.getEast();\n    var x_min = bounds.getWest();\n    var y_max = bounds.getSouth();\n    var y_min = bounds.getNorth();\n    var lat = y_min + (Math.random() * (y_max - y_min));\n    var lng = x_min + (Math.random() * (x_max - x_min));\n\n    return new L.LatLng(\n          lat,\n          lng\n    );\n  }\n \n  useEffect(() => {\n    if(props.propertyId){\n       breedService.getList(props.propertyId).then(res => {\n        if(res.code === '0000'){\n          setBreeds(res.breeds);\n          setModalLoading(false);\n        }\n      });\n    }\n  }, [props.propertyId]);\n  \n  const cancelModal = () => {\n    dispatch(closeModal());\n    if(modalData.layer){\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n    setLoading(false);\n  }\n\n  const handleBreedSubmit = (e) => {\n    breedForm\n      .validateFields()\n      .then(breed_values => {\n        onStoreBreed(breed_values);\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoadingBreed(false);\n      });\n  }\n\n  const addBreed = (object, e) => {\n    setVisibleBreed(true);\n  }\n\n  const cancelModalBreed = () => {\n    setVisibleBreed(false);\n  }\n\n  const handleSubmit = (e) => {\n    setLoading(true);\n\n    form\n      .validateFields()\n      .then(values => {\n        onStore(values);\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoading(false);\n      });\n  }\n\n  const onStore = (values) => {\n    const selectedObject = _.find(props.primaryObjects, (object) => {\n      return object.id === values.mob.primary_object_id;\n    });\n \n    let point = getRandomLatLng(selectedObject.area);\n    const data = {\n      mob: {\n        ...values.mob,\n        date_of_birth: values.mob.date_of_birth ? dateHelper.dateForAPI(values.mob.date_of_birth) : '',\n        point,\n        property_id: props.propertyId\n      }\n    }\n\n    mobService.storeOrUpdate(data, dataMob.id).then(res => {\n      if(res.code === '0000'){\n        props.onSaved(res.mob);\n        cancelModal();\n        form.resetFields();\n      } else {\n        setLoading(false);\n      }\n    });\n  }\n\n  \n\n  const onStoreBreed = (breed_values) => {\n    const breed_data = {\n      \"breed\":{\n        ...breed_values.breed,\n        property_id: props.propertyId\n      }\n    }\n\n    breedService.storeOrUpdate(breed_data).then(res => {\n      if(res.code === '0000'){\n        var tmp_breeds = _.clone(breeds);\n        tmp_breeds.push(res.breed);\n        setBreeds(tmp_breeds);\n        cancelModalBreed();\n        breedForm.resetFields();\n        setFields([\n          {\n            name: ['mob', 'breed'],\n            value: res.breed.slug,\n          },\n        ]);\n      } else {\n        setLoadingBreed(false);\n      }\n    });\n\n  }\n\n  useEffect(() => {\n    if(modalData.type === 'mob'){\n      if(modalData.object){\n        setDataMob(modalData.object);\n      }\n\n      setFields([\n        {\n          name: ['mob', 'name'],\n          value: modalData.object.name || '',\n        },\n        {\n          name: ['mob', 'type'],\n          value: modalData.object.type || '',\n        },\n        {\n          name: ['mob', 'breed'],\n          value: modalData.object.breed || '',\n        },\n        {\n          name: ['mob', 'tag_colour'],\n          value: modalData.object.tag_colour || 'blue',\n        },\n        {\n          name: ['mob', 'tag_number_range'],\n          value: modalData.object.tag_number_range || '',\n        },\n        {\n          name: ['mob', 'date_of_birth'],\n          value: modalData.object.date_of_birth ? moment(modalData.object.date_of_birth) : '',\n        },\n        {\n          name: ['mob', 'description'],\n          value: modalData.object.description || '',\n        },\n        {\n          name: ['mob', 'primary_object_id'],\n          value: modalData.object.primary_object_id || '',\n        },\n      ]);\n    }\n  }, [props.propertyId, modalVisibility, modalData]);\n\n  const renderOptionsColor = () => {\n    let options = [];\n    _.forEach(objectColors, (color, index) => {\n      options.push(\n        <Option key={index} value={color.value}>\n          <ColorItemRow>\n            <ColorItemPreview style={{backgroundColor: color.color}}></ColorItemPreview>\n            <div>{color.label}</div>\n          </ColorItemRow>\n        </Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select a color\"\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const renderOptionsBreed = (mob_breed_options) => {\n    let breed_options = [];\n     _.forEach(mob_breed_options, (breed_opt, index) => {\n      breed_options.push(\n        <Option key={index} value={breed_opt.slug}>\n            <div>{breed_opt.name}</div>\n        </Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select a breed\"\n        allowClear\n        size=\"large\"\n      >\n        {breed_options}\n      </Select>\n    );\n  }\n\n  const editLocation = () => {\n    cancelModal();\n    props.editLocation();\n  }\n\n  const renderOptionObject = (objects) => {\n    let options = [];\n    _.forEach(objects, (object, index) => {\n      options.push(\n        <Option key={object.id} value={object.id}>\n          {object.name}\n        </Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select an object\"\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  return(\n    <>\n    <MobModalWrapper\n      visible={modalVisibility && modalData.type === 'mob'}\n      onCancel={cancelModal}\n      maskClosable={false}\n      title={dataMob.id ? <IntlMessages id=\"propertyPage.modal.mob.editMob\"/> : <IntlMessages id=\"propertyPage.modal.mob.addMob\"/>}\n      footer={[\n        <Button key=\"back\" onClick={cancelModal}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" onClick={handleSubmit} loading={loading}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n      ]}\n    >\n       <Tabs defaultActiveKey=\"1\" className=\"form-body\">\n            <TabPane tab={<IntlMessages id=\"propertyPage.mobModal.detailTab\" />} key=\"1\">\n             {\n                  modalLoading ?\n                  <Loader /> : \n                    <Form\n                      form={form}\n                      layout=\"vertical\"\n                      scrollToFirstError\n                      fields={fields}\n                      id=\"#1\"\n                    >\n                    <div>\n                      <Form.Item\n                        name={['mob', 'name']}\n                        className=\"isoInputWrapper\"\n                        label=\"Name\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'This field is required',\n                          },\n                        ]}\n                      >\n                        <Input size=\"large\" placeholder=\"Input mob name\"/>\n                      </Form.Item>\n                      <Row>\n                        <Col xs={{span: 15}} md={{span: 17}}>\n                          <Form.Item\n                            name={['mob', 'breed']}\n                            className=\"isoInputWrapper\"\n                            label=\"Breed\"\n                            rules={[\n                              {\n                                required: true,\n                                message: 'This field is required',\n                              },\n                            ]}\n                          >\n                          {renderOptionsBreed(breeds)}\n                          </Form.Item>\n                        </Col>\n                        <Col xs={{span: 7, offset: 2}} md={{span: 5, offset: 2}}>\n                          <Button key=\"submit\" className=\"btn-create-breed\" type=\"primary\" onClick={addBreed}>\n                            {<IntlMessages id=\"propertyPage.modal.breed.addBreed\" />}\n                          </Button>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col xs={{span: 24}} md={{span: 11}}>\n                          <Form.Item\n                            name={['mob', 'date_of_birth']}\n                            className=\"isoInputWrapper\"\n                            label=\"Date Of Birth\"\n                            rules={[\n                              {\n                                required: true,\n                                message: 'This field is required',\n                              },\n                            ]}\n                          >\n                             <DatePicker size=\"large\" style={{width: '100%'}}/>\n                          </Form.Item>\n                        </Col>\n                        <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n                          <Form.Item\n                            name={['mob', 'type']}\n                            className=\"isoInputWrapper\"\n                            label=\"Type\"\n                            rules={[\n                              {\n                                required: true,\n                                message: 'This field is required',\n                              },\n                            ]}\n                          >\n                            <Input size=\"large\" placeholder=\"Input mob type\"/>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col xs={{span: 24}} md={{span: 11}}>\n                          <Form.Item\n                            name={['mob', 'tag_colour']}\n                            className=\"isoInputWrapper\"\n                            label=\"Tag Colour\"\n                            rules={[\n                              {\n                                required: true,\n                                message: 'This field is required',\n                              },\n                            ]}\n                          >\n                            {renderOptionsColor()}\n                          </Form.Item>\n                        </Col>\n                        <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n                          <Form.Item\n                            name={['mob', 'tag_number_range']}\n                            className=\"isoInputWrapper\"\n                            label=\"Tag Number Range\"\n                            rules={[\n                              {\n                                required: true,\n                                message: 'This field is required',\n                              },\n                            ]}\n                          >\n                            <Input size=\"large\" placeholder=\"Input tag number range\"/>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      {!modalData.canCreate || dataMob.id ? (\n                      <Form.Item\n                        name={['mob', 'primary_object_id']}\n                        className=\"isoInputWrapper\"\n                        label=\"Object\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'This field is required',\n                          },\n                        ]}\n                      >\n                        {renderOptionObject(props.primaryObjects)}\n                      </Form.Item>\n                      ) : ''}\n                      <Form.Item\n                        name={['mob', 'description']}\n                        className=\"isoInputWrapper\"\n                        label=\"Description\"\n                      >\n                        <Input.TextArea />\n                      </Form.Item>\n                    </div>  \n                </Form>\n              }\n            </TabPane>\n            <TabPane tab={<IntlMessages id=\"propertyPage.mobModal.livestockTab\" />} key=\"2\">\n              Content of Livestock Tab \n            </TabPane>\n        </Tabs>      \n    </MobModalWrapper>\n    <BreedModalWrapper\n      visible={visibleBreed}\n      onCancel={cancelModalBreed}\n      centered\n      title={ <IntlMessages id=\"propertyPage.modal.breed.addBreed.title\"/> }\n      footer={[        \n        <Button key=\"back\" onClick={cancelModalBreed}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" onClick={handleBreedSubmit} loading={loadingBreed}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n      ]}\n    >\n    {\n      modalLoading ?\n      <Loader /> : \n          <Form\n            form={breedForm}\n            layout=\"vertical\"\n            scrollToFirstError\n          >\n          <div className=\"form-body\">\n            <Form.Item\n              name={['breed', 'name']}\n              className=\"isoInputWrapper\"\n              label=\"Breed\"\n              rules={[\n                {\n                  required: true,\n                  message: 'This field is required',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Input breed\"/>\n            </Form.Item>\n            </div>    \n      </Form>\n    }\n    </BreedModalWrapper>\n    </>\n  )\n}\n\nexport default MobModal;\n\nconst ColorItemRow = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  div{\n    margin: 4px;\n  }\n`;\n\nconst ColorItemPreview = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n`;"]},"metadata":{},"sourceType":"module"}