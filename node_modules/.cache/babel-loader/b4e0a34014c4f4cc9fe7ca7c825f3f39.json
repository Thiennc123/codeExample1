{"ast":null,"code":"var _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/Layout/Main.js\";\nimport React, { Fragment, Suspense } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport PrivateLayout from './PrivateLayout/PrivateLayout';\nimport PublicLayout from './PublicLayout/PublicLayout';\nimport { Route, Redirect, Switch, withRouter } from \"react-router-dom\";\nimport privateRoutes from '../routes/private';\nimport publicRoutes from '../routes/public';\nimport _ from 'lodash';\nimport ErrorBoundary from './ErrorBoundary';\nimport Loader from '@iso/components/utility/loader';\nimport Page404 from \"@iso/containers/Pages/404/404\";\nimport VerifyPage from \"@iso/containers/Pages/VerifyPage/VerifyPage\";\nimport appActions from '@iso/redux/app/actions';\nconst {\n  changeCurrent\n} = appActions;\n\nconst Main = () => {\n  const isLoggedIn = useSelector(state => state.Auth.idToken);\n  const dispatch = useDispatch();\n  const pathArray = window.location.pathname.split('/');\n  const urlVerify = pathArray[1];\n\n  const handlePrivateLayout = () => {\n    if (isLoggedIn) {\n      if (urlVerify === 'verify') {\n        return /*#__PURE__*/React.createElement(Route, {\n          path: \"/verify\",\n          component: VerifyPage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(PrivateLayout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, _.map(privateRoutes, (route, key) => {\n          const {\n            component,\n            path\n          } = route;\n          return /*#__PURE__*/React.createElement(Route, {\n            exact: true,\n            path: path,\n            key: key,\n            component: component,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }\n          });\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          key: \"dashboard\",\n          render: () => {\n            dispatch(changeCurrent(['dashboard']));\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/dashboard\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 118\n              }\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          component: Page404,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }\n        })));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, handlePrivateLayout(), !isLoggedIn && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, _.map(privateRoutes, (route, key) => {\n    const {\n      path\n    } = route;\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: path,\n      key: key,\n      render: () => /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    });\n  }), _.map(publicRoutes, (route, key) => {\n    const {\n      component,\n      path\n    } = route;\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: path,\n      key: key,\n      render: route => {\n        return /*#__PURE__*/React.createElement(PublicLayout, {\n          component: component,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: Page404,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/Layout/Main.js"],"names":["React","Fragment","Suspense","useSelector","useDispatch","PrivateLayout","PublicLayout","Route","Redirect","Switch","withRouter","privateRoutes","publicRoutes","_","ErrorBoundary","Loader","Page404","VerifyPage","appActions","changeCurrent","Main","isLoggedIn","state","Auth","idToken","dispatch","pathArray","window","location","pathname","split","urlVerify","handlePrivateLayout","map","route","key","component","path"],"mappings":"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","sourcesContent":["import React, { Fragment, Suspense } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport PrivateLayout from './PrivateLayout/PrivateLayout';\nimport PublicLayout  from './PublicLayout/PublicLayout';\nimport { Route, Redirect, Switch, withRouter } from \"react-router-dom\";\nimport privateRoutes from '../routes/private';\nimport publicRoutes  from '../routes/public';\nimport _ from 'lodash';\nimport ErrorBoundary from './ErrorBoundary';\nimport Loader from '@iso/components/utility/loader';\nimport Page404 from \"@iso/containers/Pages/404/404\";\nimport VerifyPage from \"@iso/containers/Pages/VerifyPage/VerifyPage\";\nimport appActions from '@iso/redux/app/actions';\n\nconst { changeCurrent } = appActions;\n\nconst Main = () => {\n  const isLoggedIn = useSelector((state) => state.Auth.idToken);\n  const dispatch = useDispatch();\n  const pathArray = window.location.pathname.split('/');\n  const urlVerify = pathArray[1];\n\n  const handlePrivateLayout = () => {\n    if(isLoggedIn){\n      if(urlVerify === 'verify'){\n        return (<Route path=\"/verify\" component={VerifyPage} />);\n      } else {\n        return (\n          <PrivateLayout>\n            <Switch>\n              {_.map(privateRoutes, (route, key) => {\n                const { component, path } = route;\n                return (\n                  <Route exact path={path} key={key} component={component}/>\n                )\n              })}\n              <Route exact path=\"/\" key=\"dashboard\" render={() => { dispatch(changeCurrent(['dashboard'])); return ( <Redirect to=\"/dashboard\"/> ); }} />\n              <Route component={Page404} />\n            </Switch>\n          </PrivateLayout>\n        )\n      }\n    }\n  }\n\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<Loader />}>\n          { handlePrivateLayout() }\n          { !isLoggedIn  &&\n            <Fragment>\n              <Switch>\n                {_.map(privateRoutes, (route, key) => {\n                  const { path } = route;\n                  return (\n                    <Route exact path={path} key={key} render={() => ( <Redirect to=\"/signin\"/> )} />\n                  )\n                })}\n                {_.map(publicRoutes, (route, key) => {\n                  const { component, path } = route;\n                  return (\n                    <Route\n                      exact\n                      path={path}\n                      key={key}\n                      render={route =>\n                        { \n                          return (\n                            <PublicLayout component={component} />\n                          );\n                        }\n                      }\n                    />\n                  )\n                })}\n              <Route component={Page404} />\n              </Switch>\n            </Fragment>\n          }\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\nexport default withRouter(Main)"]},"metadata":{},"sourceType":"module"}