{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/SignUp/SignUp.js\";\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport SignUpStyleWrapper from './SignUp.styles';\nimport { userService } from '@iso/services';\nimport queryString from 'query-string';\nimport { SendOutlined } from '@ant-design/icons';\nimport Alert from '@iso/components/Feedback/Alert';\nimport logo from '@iso/assets/images/logo.png';\n\nconst SignUp = props => {\n  const [form] = _Form.useForm();\n\n  const [showMsg, setShowMsg] = React.useState(false);\n  const [userEmail, setUserEmail] = React.useState(\"abc11@yopmail.com\");\n  const [msgAlert, setMsgAlert] = React.useState(\"\");\n  const token = queryString.parse(window.location.search).token || '';\n  let history = useHistory();\n\n  const onFinish = values => {\n    const data = {\n      user: values,\n      token\n    };\n    setUserEmail(values.email);\n    userService.registers(data).then(res => {\n      if (res.code === '0000') {\n        if (token) {\n          history.push('/dashboard');\n        } else {\n          setShowMsg(true);\n        }\n      }\n    });\n  };\n\n  const resendEmail = () => {\n    userService.resendEmailConfirm(userEmail).then(res => {\n      if (res.code === '0000') {\n        setMsgAlert('Your request has been sent');\n      }\n    });\n    setTimeout(() => {\n      setMsgAlert(\"\");\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpStyleWrapper, {\n    className: \"isoSignUpPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `isoSignUpContentWrapper ${showMsg ? `w-unset` : ``}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSignUpContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, showMsg ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"showMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SendOutlined, {\n    style: {\n      fontSize: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"We've sent an email to \", userEmail, \".\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"Click the confirmation link in that email to begin using AirAgri.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msg-helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, msgAlert && /*#__PURE__*/React.createElement(Alert, {\n    message: msgAlert,\n    type: \"success\",\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"if you did not receive the email,\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"link-resend\",\n    onClick: resendEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Resend another email\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoLogoWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    height: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSignUpForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"name\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your Name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"email\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid Email!'\n    }, {\n      required: true,\n      message: 'Please input your Email!'\n    }, () => ({\n      validator(rule, value) {\n        if (value) return userService.checkEmailExists(value);else return Promise.resolve();\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"password\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }, {\n      min: 6,\n      message: 'Password must be minimum 6 characters.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    type: \"password\",\n    size: \"large\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"password_confirmation\",\n    className: \"isoInputWrapper\",\n    dependencies: ['password'],\n    rules: [{\n      required: true,\n      message: 'Please input your Confirm Password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    type: \"password\",\n    size: \"large\",\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"mobile_phone\",\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Mobile Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"page.signUpButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoInputWrapper isoCenterComponent isoHelperWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"page.signUpAlreadyAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  })))))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/SignUp/SignUp.js"],"names":["React","Link","useHistory","IntlMessages","SignUpStyleWrapper","userService","queryString","SendOutlined","Alert","logo","SignUp","props","form","useForm","showMsg","setShowMsg","useState","userEmail","setUserEmail","msgAlert","setMsgAlert","token","parse","window","location","search","history","onFinish","values","data","user","email","registers","then","res","code","push","resendEmail","resendEmailConfirm","setTimeout","fontSize","marginBottom","required","message","type","validator","rule","value","checkEmailExists","Promise","resolve","min","getFieldValue","reject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport SignUpStyleWrapper from './SignUp.styles';\nimport { userService } from '@iso/services';\nimport { Form, Input, Button } from 'antd';\nimport queryString from 'query-string';\nimport { SendOutlined } from '@ant-design/icons';\nimport Alert from '@iso/components/Feedback/Alert';\nimport logo from '@iso/assets/images/logo.png';\n\nconst SignUp = (props) => {\n  const [form] = Form.useForm();\n  const [showMsg, setShowMsg] = React.useState(false);\n  const [userEmail, setUserEmail] = React.useState(\"abc11@yopmail.com\");\n  const [msgAlert, setMsgAlert] = React.useState(\"\");\n  const token = queryString.parse(window.location.search).token || '';\n  let history = useHistory();\n\n  const onFinish = (values) => {\n    const data = {\n      user: values,\n      token\n    }\n    setUserEmail(values.email);\n    userService.registers(data).then(res => {\n      if(res.code === '0000'){\n        if(token) {\n          history.push('/dashboard');\n        } else {\n          setShowMsg(true);\n        }\n      }\n    });\n  };\n\n  const resendEmail = () => {\n    userService.resendEmailConfirm(userEmail).then(res => {\n      if(res.code === '0000'){\n        setMsgAlert('Your request has been sent');\n      }\n    });\n    setTimeout(() => {\n      setMsgAlert(\"\");\n    }, 3000);\n  }\n\n  return (\n    <SignUpStyleWrapper className=\"isoSignUpPage\">\n      <div className={`isoSignUpContentWrapper ${showMsg ? `w-unset` : ``}`}>\n        <div className=\"isoSignUpContent\">\n          {\n            showMsg ?\n            (\n              <div className=\"showMsg\">\n                <div className=\"icon-content\">\n                  <Link to=\"/signin\">\n                    <SendOutlined style={{fontSize: '40px'}}/>\n                  </Link>\n                </div>\n                <div className=\"text-content\">\n                  <h2>We've sent an email to {userEmail}.</h2>\n                  <h2>Click the confirmation link in that email to begin using AirAgri.</h2>\n                  <div className=\"msg-helper\">\n                    {\n                      msgAlert && \n                      <Alert\n                        message={msgAlert}\n                        type='success'\n                        style={{marginBottom: '10px'}}\n                      />\n                    }\n                    <p>if you did not receive the email,</p>\n                    <p className=\"link-resend\" onClick={resendEmail}>Resend another email</p>\n                  </div>\n                </div>\n              </div>\n            ) : \n            (\n              <div>\n                <div className=\"isoLogoWrapper\">\n                  <Link to=\"/dashboard\">\n                    <img src={logo} height=\"40\"/>\n                  </Link>\n                </div>\n                <div className=\"isoSignUpForm\">\n                  <Form\n                    form={form}\n                    name=\"register\"\n                    onFinish={onFinish}\n                    scrollToFirstError\n                  >\n                    <Form.Item\n                      name=\"name\"\n                      className=\"isoInputWrapper\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please input your Name!',\n                        },\n                      ]}\n                    >\n                      <Input size=\"large\" placeholder=\"Name\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                      name=\"email\"\n                      className=\"isoInputWrapper\"\n                      rules={[\n                        {\n                          type: 'email',\n                          message: 'The input is not valid Email!',\n                        },\n                        {\n                          required: true,\n                          message: 'Please input your Email!',\n                        },\n                        () => ({\n                          validator(rule, value) {\n                            if(value)\n                              return userService.checkEmailExists(value);\n                            else\n                              return Promise.resolve();\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input size=\"large\" placeholder=\"Email\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                      name=\"password\"\n                      className=\"isoInputWrapper\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please input your Password!',\n                        },\n                        {\n                          min: 6,\n                          message: 'Password must be minimum 6 characters.'\n                        }\n                      ]}\n                    >\n                      <Input type=\"password\" size=\"large\" placeholder=\"Password\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                      name=\"password_confirmation\"\n                      className=\"isoInputWrapper\"\n                      dependencies={['password']}\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Please input your Confirm Password!',\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                              return Promise.resolve();\n                            }\n                            return Promise.reject('The two passwords that you entered do not match!');\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input type=\"password\" size=\"large\" placeholder=\"Confirm Password\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                      name=\"mobile_phone\"\n                      className=\"isoInputWrapper\"\n                    >\n                      <Input size=\"large\" placeholder=\"Mobile Phone\"/>\n                    </Form.Item>\n\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"btn-success\">\n                        <IntlMessages id=\"page.signUpButton\" />\n                      </Button>\n                    </Form.Item>\n\n                    <div className=\"isoInputWrapper isoCenterComponent isoHelperWrapper\">\n                      <Link to=\"/signin\">\n                        <IntlMessages id=\"page.signUpAlreadyAccount\" />\n                      </Link>\n                    </div>\n                  </Form>\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </SignUpStyleWrapper>\n  );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}