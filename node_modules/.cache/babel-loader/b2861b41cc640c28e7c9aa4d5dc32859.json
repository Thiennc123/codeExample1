{"ast":null,"code":"var spherical = require('spherical'),\n    geojsonArea = require('geojson-area'),\n    wgs84 = require('wgs84');\n\nmodule.exports.circle = function (center, radius, opt) {\n  center = L.latLng(center);\n  opt = opt || {};\n  var parts = opt.parts || 20;\n\n  function generate(center) {\n    var lls = [];\n    var angularRadius = radius / wgs84.RADIUS * 180 / Math.PI;\n\n    for (var i = 0; i < parts + 1; i++) {\n      lls.push(spherical.radial([center.lng, center.lat], i / parts * 360, radius).reverse());\n    }\n\n    if (angularRadius > 90 - center.lat) {\n      lls.push([lls[0][0], center.lng + 180], [90, center.lng + 180], [90, center.lng - 180], [lls[0][0], center.lng - 180]);\n    }\n\n    if (angularRadius > 90 + center.lat) {\n      lls.splice((parts >> 1) + 1, 0, [lls[parts >> 1][0], center.lng - 180], [-90, center.lng - 180], [-90, center.lng + 180], [lls[parts >> 1][0], center.lng + 180]);\n    }\n\n    return lls;\n  }\n\n  var poly = L.polygon(generate(center), opt);\n\n  poly.setLatLng = function (_) {\n    center = _;\n    poly.setLatLngs(generate(center));\n    return poly;\n  };\n\n  poly.getRadius = function (_) {\n    return radius;\n  };\n\n  poly.setRadius = function (_) {\n    radius = _;\n    poly.setLatLngs(generate(center));\n    return poly;\n  };\n\n  return poly;\n};\n\nmodule.exports.area = function (layer) {\n  var gj = layer.toGeoJSON();\n  return geojsonArea(gj.geometry);\n};","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/node_modules/leaflet-geodesy/index.js"],"names":["spherical","require","geojsonArea","wgs84","module","exports","circle","center","radius","opt","L","latLng","parts","generate","lls","angularRadius","RADIUS","Math","PI","i","push","radial","lng","lat","reverse","splice","poly","polygon","setLatLng","_","setLatLngs","getRadius","setRadius","area","layer","gj","toGeoJSON","geometry"],"mappings":"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","sourcesContent":["var spherical = require('spherical'),\n    geojsonArea = require('geojson-area'),\n    wgs84 = require('wgs84');\n\nmodule.exports.circle = function(center, radius, opt) {\n    center = L.latLng(center);\n    opt = opt || {};\n    var parts = opt.parts || 20;\n\n    function generate(center) {\n        var lls = [];\n        var angularRadius = radius / wgs84.RADIUS * 180 / Math.PI;\n\n        for (var i = 0; i < parts + 1; i++) {\n            lls.push(spherical.radial(\n                [center.lng, center.lat],\n                (i / parts) * 360, radius).reverse());\n        }\n\n        if (angularRadius > (90 - center.lat)) {\n            lls.push([lls[0][0], center.lng + 180],\n                [90, center.lng + 180],\n                [90, center.lng - 180],\n                [lls[0][0], center.lng - 180]);\n        }\n\n        if (angularRadius > (90 + center.lat)) {\n            lls.splice((parts >> 1) + 1, 0,\n                [lls[(parts>>1)][0], center.lng-180 ],\n                [-90, center.lng-180],\n                [-90, center.lng+180],\n                [lls[(parts >> 1)][0], center.lng+180 ]);\n        }\n\n        return lls;\n    }\n\n    var poly = L.polygon(generate(center), opt);\n\n    poly.setLatLng = function(_) {\n        center = _;\n        poly.setLatLngs(generate(center));\n        return poly;\n    };\n\n    poly.getRadius = function(_) {\n        return radius;\n    };\n\n    poly.setRadius = function(_) {\n        radius = _;\n        poly.setLatLngs(generate(center));\n        return poly;\n    };\n\n    return poly;\n};\n\nmodule.exports.area = function(layer) {\n    var gj = layer.toGeoJSON();\n    return geojsonArea(gj.geometry);\n};\n"]},"metadata":{},"sourceType":"script"}