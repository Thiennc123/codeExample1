{"ast":null,"code":"var _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/VerifyPage/VerifyPage.js\";\nimport React from 'react';\nimport Loader from '@iso/components/utility/loader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport VerifyPageWrapper from './VerifyPage.styles';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { userService } from '@iso/services';\nimport { useDispatch } from 'react-redux';\nimport authAction from '@iso/redux/auth/actions';\nimport appAction from '@iso/redux/app/actions';\nconst {\n  login\n} = authAction;\nconst {\n  clearMenu\n} = appAction;\n\nconst VerifyPage = props => {\n  const [message, setMessage] = React.useState('');\n  const token = queryString.parse(props.location.search).token || '';\n  const property_id = queryString.parse(props.location.search).property_id || '';\n  const dispatch = useDispatch();\n  let history = useHistory();\n  React.useEffect(() => {\n    const data = {\n      token,\n      property_id\n    };\n    setTimeout(() => {\n      userService.verifyEmail(data).then(res => {\n        if (res.access_token) {\n          dispatch(login(res.access_token));\n          dispatch(clearMenu());\n          history.push('/dashboard');\n        } else {\n          if (res.code === '0000') {\n            history.push('/dashboard');\n          } else {\n            setMessage(res.message);\n          }\n        }\n      });\n    }, 2000);\n  });\n  return /*#__PURE__*/React.createElement(VerifyPageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, message ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, message) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, property_id ? /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"verifypage.inviteEmail.message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"verifypage.email.message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default withRouter(VerifyPage);","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/VerifyPage/VerifyPage.js"],"names":["React","Loader","IntlMessages","VerifyPageWrapper","withRouter","useHistory","queryString","userService","useDispatch","authAction","appAction","login","clearMenu","VerifyPage","props","message","setMessage","useState","token","parse","location","search","property_id","dispatch","history","useEffect","data","setTimeout","verifyEmail","then","res","access_token","push","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,UAAlB;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAgBF,SAAtB;;AAEA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMC,KAAK,GAAGZ,WAAW,CAACa,KAAZ,CAAkBL,KAAK,CAACM,QAAN,CAAeC,MAAjC,EAAyCH,KAAzC,IAAkD,EAAhE;AACA,QAAMI,WAAW,GAAGhB,WAAW,CAACa,KAAZ,CAAkBL,KAAK,CAACM,QAAN,CAAeC,MAAjC,EAAyCC,WAAzC,IAAwD,EAA5E;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAIgB,OAAO,GAAGnB,UAAU,EAAxB;AAEAL,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,UAAMC,IAAI,GAAG;AACXR,MAAAA,KADW;AAEXI,MAAAA;AAFW,KAAb;AAIAK,IAAAA,UAAU,CAAC,MAAM;AACfpB,MAAAA,WAAW,CAACqB,WAAZ,CAAwBF,IAAxB,EAA8BG,IAA9B,CAAmCC,GAAG,IAAI;AACxC,YAAGA,GAAG,CAACC,YAAP,EAAoB;AAClBR,UAAAA,QAAQ,CAACZ,KAAK,CAACmB,GAAG,CAACC,YAAL,CAAN,CAAR;AACAR,UAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACAY,UAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AACD,SAJD,MAIO;AACL,cAAGF,GAAG,CAACG,IAAJ,KAAa,MAAhB,EAAuB;AACrBT,YAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AACD,WAFD,MAEO;AACLhB,YAAAA,UAAU,CAACc,GAAG,CAACf,OAAL,CAAV;AACD;AACF;AACF,OAZD;AAaD,KAdS,EAcP,IAdO,CAAV;AAeD,GApBD;AAsBA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,OAAO,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,CADO,gBAGP,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIO,WAAW,gBACX,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAEX,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFF,CALJ,CADF;AAoBD,CAjDD;;AAmDA,eAAelB,UAAU,CAACS,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Loader from '@iso/components/utility/loader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport VerifyPageWrapper from './VerifyPage.styles';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { userService } from '@iso/services';\nimport { useDispatch } from 'react-redux';\nimport authAction from '@iso/redux/auth/actions';\nimport appAction from '@iso/redux/app/actions';\n\nconst { login } = authAction;\nconst { clearMenu } = appAction;\n\nconst VerifyPage = (props) => {\n  const [message, setMessage] = React.useState('');\n  const token = queryString.parse(props.location.search).token || '';\n  const property_id = queryString.parse(props.location.search).property_id || '';\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  React.useEffect(() => {\n    const data = {\n      token,\n      property_id\n    }\n    setTimeout(() => {\n      userService.verifyEmail(data).then(res => {\n        if(res.access_token){\n          dispatch(login(res.access_token));\n          dispatch(clearMenu());\n          history.push('/dashboard');\n        } else {\n          if(res.code === '0000'){\n            history.push('/dashboard');\n          } else {\n            setMessage(res.message);\n          }\n        }\n      })\n    }, 2000)\n  });\n\n  return (\n    <VerifyPageWrapper>\n      {\n        message ?\n        <h1>{message}</h1>\n        :\n        <>\n          <Loader />\n          <h1>\n            {\n              property_id ?\n              <IntlMessages id=\"verifypage.inviteEmail.message\" /> :\n              <IntlMessages id=\"verifypage.email.message\" />\n            }\n          </h1>\n        </>\n      }\n      \n    </VerifyPageWrapper>\n  );\n}\n\nexport default withRouter(VerifyPage);\n"]},"metadata":{},"sourceType":"module"}