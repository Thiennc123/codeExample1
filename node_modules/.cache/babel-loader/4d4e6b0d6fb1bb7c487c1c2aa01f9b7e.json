{"ast":null,"code":"import \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/PrimaryObject/PrimaryObjectModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PrimaryObjectModalWrapper from './PrimaryObjectModal.styles';\nimport _ from 'lodash';\nimport { objectColors } from '@iso/constants/objectColors';\nimport { objectTypes } from '@iso/constants/objectTypes';\nimport styled from \"styled-components\";\nimport { primaryObjectService } from '@iso/services';\nimport modalActions from '@iso/redux/modal/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nconst {\n  Option\n} = _Select;\nconst {\n  closeModal\n} = modalActions;\n\nconst PrimaryObjectModal = props => {\n  const [form] = _Form.useForm();\n\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const modalVisibility = useSelector(state => state.modal.modalVisibility);\n  const modalData = useSelector(state => state.modal.modalData);\n  const dispatch = useDispatch();\n  const [dataObject, setDataObject] = useState({});\n  useEffect(() => {\n    if (modalData.type === 'area') {\n      if (modalData.object) {\n        setDataObject(modalData.object);\n      }\n\n      setFields([{\n        name: ['primary_object', 'name'],\n        value: modalData.object.name || ''\n      }, {\n        name: ['primary_object', 'color'],\n        value: modalData.object.color || 'blue'\n      }, {\n        name: ['primary_object', 'type'],\n        value: modalData.object.type || 'area'\n      }, {\n        name: ['primary_object', 'acreage'],\n        value: modalData.object.acreage ? parseFloat(modalData.object.acreage) : 0\n      }, {\n        name: ['primary_object', 'description'],\n        value: modalData.object.description || ''\n      }]);\n    }\n  }, [modalData]);\n\n  const cancelModal = () => {\n    dispatch(closeModal());\n\n    if (modalData.layer) {\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n\n    setLoading(false);\n  };\n\n  const handleSubmit = e => {\n    setLoading(true);\n    form.validateFields().then(values => {\n      values.primary_object.property_id = props.propertyId;\n      let coordinates = modalData.object.coordinates || modalData.object.area;\n      values.primary_object.data_area = _.map(coordinates, point => {\n        return point.toString().replace(',', ', ');\n      });\n      onStore(values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoading(false);\n    });\n  };\n\n  const onStore = values => {\n    primaryObjectService.storeOrUpdateProperties(values, modalData.object.id).then(res => {\n      if (res.code === '0000') {\n        cancelModal();\n\n        if (modalData.object.id) {\n          props.onEdited(res.primary_object);\n        } else {\n          props.updatePropertyDetail(props.propertyId);\n        }\n\n        setLoading(false); // props.resetLayer();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  const renderOptionsColor = () => {\n    let options = [];\n\n    _.forEach(objectColors, (color, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: color.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ColorItemRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ColorItemPreview, {\n        style: {\n          backgroundColor: color.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, color.label))));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select a color\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const renderOptionsType = () => {\n    let options = [];\n\n    _.forEach(objectTypes, (type, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ColorItemRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, type.label))));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select a type\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const handleDelete = object => {\n    primaryObjectService.destroy(object.id).then(res => {\n      if (res.code === '0000') {\n        cancelModal();\n        props.updatePropertyDetail(props.propertyId);\n      }\n    });\n  };\n\n  const editArea = () => {\n    cancelModal();\n    props.editArea(dataObject.clickedPolygon);\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryObjectModalWrapper, {\n    className: \"user-access-modal\",\n    forceRender: true,\n    visible: modalVisibility && modalData.type === 'area',\n    title: dataObject.name ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyMapPage.editObject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 32\n      }\n    }) : /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyMapPage.addObject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 83\n      }\n    }),\n    onCancel: cancelModal,\n    maskClosable: false,\n    footer: [dataObject.name && /*#__PURE__*/React.createElement(_Button, {\n      key: \"editArea\",\n      onClick: editArea,\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.editArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      onClick: handleSubmit,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 12\n      }\n    })), dataObject.name && /*#__PURE__*/React.createElement(_Button, {\n      key: \"delete\",\n      type: \"danger\",\n      onClick: handleDelete.bind(this, dataObject),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    name: \"addEditPrimaryObject\",\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    fields: fields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['primary_object', 'name'],\n    className: \"isoInputWrapper\",\n    label: \"Property Name\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }, {\n      whitespace: true,\n      message: 'Please input your Name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input your object name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AcreageInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['primary_object', 'acreage'],\n    className: \"isoInputWrapper\",\n    label: \"Acreage\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }, {\n      type: 'number'\n    }],\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_InputNumber, {\n    size: \"large\",\n    placeholder: \"Input your object acreage\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(SuffixAddon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"ha\")), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['primary_object', 'color'],\n    label: \"Color on map\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, renderOptionsColor()), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['primary_object', 'type'],\n    label: \"Type\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 12\n    }\n  }, renderOptionsType()), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['primary_object', 'description'],\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default PrimaryObjectModal;\nconst ColorItemRow = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  div{\n    margin: 4px;\n  }\n`;\nconst ColorItemPreview = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n`;\nconst SuffixAddon = styled.span`\n  margin-top: 31px;\n  margin-bottom: 5px;\n  line-height: 38px;\n  color: #747784!important;\n  flex-shrink: 0;\n  border-top-right-radius: 4px!important;\n  border-bottom-right-radius: 4px!important;\n  border-right-width: 1px!important;\n  min-width: 36px;\n  background-color: #f8f9fa;\n  border: solid #d9d9d9;\n  border-width: 1px 0;\n  white-space: nowrap;\n  text-align: center;\n`;\nconst AcreageInput = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/components/PrimaryObject/PrimaryObjectModal.js"],"names":["React","useState","useEffect","IntlMessages","PrimaryObjectModalWrapper","_","objectColors","objectTypes","styled","primaryObjectService","modalActions","useSelector","useDispatch","Option","closeModal","PrimaryObjectModal","props","form","useForm","fields","setFields","loading","setLoading","modalVisibility","state","modal","modalData","dispatch","dataObject","setDataObject","type","object","name","value","color","acreage","parseFloat","description","cancelModal","layer","featureGroup","leafletElement","removeLayer","handleSubmit","e","validateFields","then","values","primary_object","property_id","propertyId","coordinates","area","data_area","map","point","toString","replace","onStore","catch","info","console","log","storeOrUpdateProperties","id","res","code","onEdited","updatePropertyDetail","renderOptionsColor","options","forEach","index","push","backgroundColor","label","renderOptionsType","handleDelete","destroy","editArea","clickedPolygon","float","bind","required","message","whitespace","width","ColorItemRow","div","ColorItemPreview","SuffixAddon","span","AcreageInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PrimaryObjectModalWrapper from './PrimaryObjectModal.styles';\nimport { Form, Input, Button, InputNumber, Select } from 'antd';\nimport _ from 'lodash';\nimport { objectColors } from '@iso/constants/objectColors';\nimport { objectTypes } from '@iso/constants/objectTypes';\nimport styled from \"styled-components\";\nimport { primaryObjectService } from '@iso/services';\nimport modalActions from '@iso/redux/modal/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst { Option } = Select;\nconst { closeModal } = modalActions;\n\nconst PrimaryObjectModal = (props) => {\n  const [form] = Form.useForm();\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const modalVisibility = useSelector((state) => state.modal.modalVisibility);\n  const modalData = useSelector((state) => state.modal.modalData);\n  const dispatch = useDispatch();\n  const [dataObject, setDataObject] = useState({});\n\n  useEffect(() => {\n    if(modalData.type === 'area'){\n      if(modalData.object){\n        setDataObject(modalData.object);\n      }\n      setFields([\n        {\n          name: ['primary_object', 'name'],\n          value: modalData.object.name || '',\n        },\n        {\n          name: ['primary_object', 'color'],\n          value: modalData.object.color || 'blue',\n        },\n        {\n          name: ['primary_object', 'type'],\n          value: modalData.object.type || 'area',\n        },\n        {\n          name: ['primary_object', 'acreage'],\n          value: modalData.object.acreage ? parseFloat(modalData.object.acreage) : 0,\n        },\n        {\n          name: ['primary_object', 'description'],\n          value: modalData.object.description || '',\n        },\n      ]);\n    }\n  }, [modalData]);\n\n  const cancelModal = () => {\n    dispatch(closeModal());\n    if(modalData.layer){\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n    setLoading(false);\n  }\n\n  const handleSubmit = (e) => {\n    setLoading(true);\n\n    form\n      .validateFields()\n      .then(values => {\n        values.primary_object.property_id = props.propertyId;\n        let coordinates = modalData.object.coordinates || modalData.object.area;\n        values.primary_object.data_area = _.map(coordinates, (point) => {\n          return point.toString().replace(',', ', ');\n        });\n\n        onStore(values);\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoading(false);\n      });\n  }\n\n  const onStore = (values) => {\n    primaryObjectService.storeOrUpdateProperties(values, modalData.object.id).then(res => {\n      if(res.code === '0000'){\n        cancelModal();\n        if(modalData.object.id){\n          props.onEdited(res.primary_object);\n        } else {\n          props.updatePropertyDetail(props.propertyId);\n        }\n        setLoading(false);\n        // props.resetLayer();\n      } else {\n        setLoading(false);\n      }\n    });\n  }\n\n  const renderOptionsColor = () => {\n    let options = [];\n    _.forEach(objectColors, (color, index) => {\n      options.push(\n        <Option key={index} value={color.value}>\n          <ColorItemRow>\n            <ColorItemPreview style={{backgroundColor: color.color}}></ColorItemPreview>\n            <div>{color.label}</div>\n          </ColorItemRow>\n        </Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select a color\"\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const renderOptionsType = () => {\n    let options = [];\n    _.forEach(objectTypes, (type, index) => {\n      options.push(\n        <Option key={index} value={type.value}>\n          <ColorItemRow>\n            <div>{type.label}</div>\n          </ColorItemRow>\n        </Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select a type\"\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const handleDelete = (object) => {\n    primaryObjectService.destroy(object.id).then(res => {\n      if(res.code === '0000'){\n        cancelModal();\n        props.updatePropertyDetail(props.propertyId);\n      }\n    });\n  }\n\n  const editArea = () => {\n    cancelModal();\n    props.editArea(dataObject.clickedPolygon);\n  }\n\n  return (\n    <PrimaryObjectModalWrapper\n      className=\"user-access-modal\"\n      forceRender={true}\n      visible={modalVisibility && modalData.type === 'area'}\n      title={dataObject.name ? <IntlMessages id=\"propertyMapPage.editObject\" /> : <IntlMessages id=\"propertyMapPage.addObject\" />}\n      onCancel={cancelModal}\n      maskClosable={false}\n      footer={[\n        dataObject.name &&\n        <Button key=\"editArea\" onClick={editArea} style={{float: 'left'}}>\n          {<IntlMessages id=\"propertyPage.modal.editArea\" />}\n        </Button>,\n        <Button key=\"back\" onClick={cancelModal}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" onClick={handleSubmit} loading={loading}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n        dataObject.name &&\n        <Button key=\"delete\" type=\"danger\" onClick={handleDelete.bind(this, dataObject)}>\n          {<IntlMessages id=\"propertyPage.modal.delete\" />}\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        name=\"addEditPrimaryObject\"\n        layout=\"vertical\"\n        scrollToFirstError\n        fields={fields}\n      >\n        <div className=\"form-body\">\n          <Form.Item\n            name={['primary_object', 'name']}\n            className=\"isoInputWrapper\"\n            label=\"Property Name\"\n            rules={[\n              {\n                required: true,\n                message: 'This field is required',\n              },\n              {\n                whitespace:true,\n                message: 'Please input your Name',\n              }\n            ]}\n          >\n            <Input size=\"large\" placeholder=\"Input your object name\"/>\n          </Form.Item>\n          <AcreageInput>\n            <Form.Item\n              name={['primary_object', 'acreage']}\n              className=\"isoInputWrapper\"\n              label=\"Acreage\"\n              rules={[\n                {\n                  required: true,\n                  message: 'This field is required',\n                },\n                {\n                  type: 'number',\n                }\n              ]}\n              style={{width: '100%'}}\n            >\n              <InputNumber size=\"large\" placeholder=\"Input your object acreage\" style={{width: '100%'}}/>\n            </Form.Item>\n            <SuffixAddon>ha</SuffixAddon>\n          </AcreageInput>\n          <Form.Item\n            name={['primary_object', 'color']}\n            label=\"Color on map\"\n            rules={[\n              {\n                required: true,\n                message: 'This field is required',\n              },\n            ]}\n          >\n            {renderOptionsColor()}\n          </Form.Item>\n           <Form.Item\n            name={['primary_object', 'type']}\n            label=\"Type\"\n            rules={[\n              {\n                required: true,\n                message: 'This field is required',\n              },\n            ]}\n          >\n            {renderOptionsType()}\n          </Form.Item>\n          \n          <Form.Item name={['primary_object', 'description']} label=\"Description\">\n            <Input.TextArea />\n          </Form.Item>\n        </div>\n      </Form>\n    </PrimaryObjectModalWrapper>\n  );\n}\n\nexport default PrimaryObjectModal;\n\nconst ColorItemRow = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  div{\n    margin: 4px;\n  }\n`;\n\nconst ColorItemPreview = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n`;\n\nconst SuffixAddon = styled.span`\n  margin-top: 31px;\n  margin-bottom: 5px;\n  line-height: 38px;\n  color: #747784!important;\n  flex-shrink: 0;\n  border-top-right-radius: 4px!important;\n  border-bottom-right-radius: 4px!important;\n  border-right-width: 1px!important;\n  min-width: 36px;\n  background-color: #f8f9fa;\n  border: solid #d9d9d9;\n  border-width: 1px 0;\n  white-space: nowrap;\n  text-align: center;\n`;\n\nconst AcreageInput = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;"]},"metadata":{},"sourceType":"module"}