{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/date-picker/style/css\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/Task/TaskModal.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport TaskModalWrapper from './TaskModal.styles';\nimport _ from 'lodash';\nimport { taskPriorities } from '@iso/constants/taskPriorities';\nimport { taskStatus } from '@iso/constants/taskStatus';\nimport Loader from '@iso/components/utility/loader';\nimport { propertyService, taskService } from '@iso/services';\nimport { dateHelper } from '@iso/lib/helpers/dateHelper';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\nconst {\n  Option\n} = _Select;\nconst {\n  closeModal\n} = modalActions;\n\nconst TaskModal = props => {\n  const [form] = _Form.useForm();\n\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [assignees, setAssignees] = useState([]);\n  const modalVisibility = useSelector(state => state.modal.modalVisibility);\n  const modalData = useSelector(state => state.modal.modalData);\n  const dispatch = useDispatch();\n  const [dataTask, setDataTask] = useState({});\n  const updateDataAssignee = useCallback(() => {\n    propertyService.getListUsersOfProperty(props.propertyId).then(res => {\n      if (res.code === '0000') {\n        setAssignees(res.users);\n        setModalLoading(false);\n      }\n    });\n  }, [props]);\n  useEffect(() => {\n    if (modalData.type === 'task') {\n      if (modalData.task) {\n        setDataTask(modalData.task);\n      }\n\n      setFields([{\n        name: ['task', 'title'],\n        value: modalData.task.title || ''\n      }, {\n        name: ['task', 'due_date'],\n        value: modalData.task.due_date ? moment(modalData.task.due_date) : ''\n      }, {\n        name: ['task', 'priority'],\n        value: modalData.task.priority || 'medium'\n      }, {\n        name: ['task', 'status'],\n        value: modalData.task.status || 'todo'\n      }, {\n        name: ['task', 'assignee_id'],\n        value: modalData.task.assignee ? modalData.task.assignee.id : 0\n      }, {\n        name: ['task', 'details'],\n        value: modalData.task.details || ''\n      }, {\n        name: ['task', 'primary_object_id'],\n        value: modalData.task.primary_object_id ? modalData.task.primary_object_id : 0\n      }]);\n\n      if (props.propertyId && modalVisibility) {\n        updateDataAssignee();\n      }\n    }\n  }, [props.propertyId, updateDataAssignee, modalVisibility, modalData]);\n\n  const cancelModal = () => {\n    dispatch(closeModal());\n\n    if (modalData.layer) {\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n\n    setLoading(false);\n  };\n\n  const renderOptionPriority = () => {\n    let options = [];\n\n    _.forEach(taskPriorities, (taskPriority, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: taskPriority.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, taskPriority.label));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const renderOptionStatus = () => {\n    let options = [];\n\n    _.forEach(taskStatus, (status, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: status.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, status.label));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const renderOptionAssignee = users => {\n    let options = [];\n\n    _.forEach(users, (user, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: user.id,\n        value: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, user.name, \" | \", user.email));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"Not assigned\"), options);\n  };\n\n  const renderOptionObject = objects => {\n    let options = [];\n\n    _.forEach(objects, (object, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: object.id,\n        value: object.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, object.name));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      key: 0,\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, \"No paddock\"), options);\n  };\n\n  const handleSubmit = e => {\n    setLoading(true);\n    form.validateFields().then(values => {\n      onStore(values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoading(false);\n    });\n  };\n\n  const onStore = values => {\n    const data = {\n      task: { ...values.task,\n        due_date: values.task.due_date ? dateHelper.dateForAPI(values.task.due_date) : '',\n        point: dataTask.point,\n        property_id: props.propertyId\n      }\n    };\n    taskService.storeOrUpdateTasks(data, dataTask.id).then(res => {\n      if (res.code === '0000') {\n        props.onSaved();\n        cancelModal();\n        form.resetFields();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  const editLocation = () => {\n    cancelModal();\n    props.editLocation();\n  };\n\n  return /*#__PURE__*/React.createElement(TaskModalWrapper, {\n    className: \"user-access-modal\",\n    forceRender: true,\n    visible: modalVisibility,\n    title: dataTask.id ? /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyMapPage.editTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyMapPage.addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 78\n      }\n    }),\n    onCancel: cancelModal,\n    maskClosable: false,\n    footer: [/*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      onClick: handleSubmit,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, modalLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    name: \"addEditTask\",\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    fields: fields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'title'],\n    className: \"isoInputWrapper\",\n    label: \"Title\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Input task title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'priority'],\n    label: \"Priority\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, renderOptionPriority()), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'due_date'],\n    className: \"isoInputWrapper\",\n    label: \"Due Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_DatePicker, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'status'],\n    className: \"isoInputWrapper\",\n    label: \"Status\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, renderOptionStatus()))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: dataTask.id ? 11 : 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'assignee_id'],\n    className: \"isoInputWrapper\",\n    label: \"Assignee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, renderOptionAssignee(assignees))), dataTask.id && /*#__PURE__*/React.createElement(_Col, {\n    xs: {\n      span: 24\n    },\n    md: {\n      span: 11,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'primary_object_id'],\n    className: \"isoInputWrapper\",\n    label: \"Object\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, renderOptionObject(props.primaryObjects)))), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: ['task', 'details'],\n    label: \"Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/Task/TaskModal.js"],"names":["React","useState","useEffect","useCallback","IntlMessages","TaskModalWrapper","_","taskPriorities","taskStatus","Loader","propertyService","taskService","dateHelper","moment","useSelector","useDispatch","modalActions","Option","closeModal","TaskModal","props","form","useForm","fields","setFields","loading","setLoading","modalLoading","setModalLoading","assignees","setAssignees","modalVisibility","state","modal","modalData","dispatch","dataTask","setDataTask","updateDataAssignee","getListUsersOfProperty","propertyId","then","res","code","users","type","task","name","value","title","due_date","priority","status","assignee","id","details","primary_object_id","cancelModal","layer","featureGroup","leafletElement","removeLayer","renderOptionPriority","options","forEach","taskPriority","index","push","label","renderOptionStatus","renderOptionAssignee","user","email","renderOptionObject","objects","object","handleSubmit","e","validateFields","values","onStore","catch","info","console","log","data","dateForAPI","point","property_id","storeOrUpdateTasks","onSaved","resetFields","editLocation","required","message","span","offset","primaryObjects"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport TaskModalWrapper from './TaskModal.styles';\nimport { Form, Input, Button, Select, Row, Col, DatePicker } from 'antd';\nimport _ from 'lodash';\nimport { taskPriorities } from '@iso/constants/taskPriorities';\nimport { taskStatus } from '@iso/constants/taskStatus';\nimport Loader from '@iso/components/utility/loader';\nimport { propertyService, taskService } from '@iso/services';\nimport { dateHelper } from '@iso/lib/helpers/dateHelper';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport modalActions from '@iso/redux/modal/actions';\n\nconst { Option } = Select;\nconst { closeModal } = modalActions;\n\nconst TaskModal = (props) => {\n  const [form] = Form.useForm();\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [assignees, setAssignees] = useState([]);\n  const modalVisibility = useSelector((state) => state.modal.modalVisibility);\n  const modalData = useSelector((state) => state.modal.modalData);\n  const dispatch = useDispatch();\n  const [dataTask, setDataTask] = useState({});\n  const updateDataAssignee = useCallback(() => {\n    propertyService.getListUsersOfProperty(props.propertyId).then(res => {\n      if(res.code === '0000'){\n        setAssignees(res.users);\n        setModalLoading(false);\n      }\n    });\n  }, [props]);\n\n  useEffect(() => {\n    if(modalData.type === 'task'){\n      if(modalData.task){\n        setDataTask(modalData.task);\n      }\n      setFields([\n        {\n          name: ['task', 'title'],\n          value: modalData.task.title || '',\n        },\n        {\n          name: ['task', 'due_date'],\n          value: modalData.task.due_date ? moment(modalData.task.due_date) : '',\n        },\n        {\n          name: ['task', 'priority'],\n          value: modalData.task.priority || 'medium',\n        },\n        {\n          name: ['task', 'status'],\n          value: modalData.task.status || 'todo',\n        },\n        {\n          name: ['task', 'assignee_id'],\n          value: modalData.task.assignee ? modalData.task.assignee.id : 0,\n        },\n        {\n          name: ['task', 'details'],\n          value: modalData.task.details || '',\n        },\n        {\n          name: ['task', 'primary_object_id'],\n          value: modalData.task.primary_object_id ? modalData.task.primary_object_id : 0,\n        },\n      ]);\n      if(props.propertyId && modalVisibility){\n        updateDataAssignee();\n      }\n    }\n  }, [props.propertyId, updateDataAssignee, modalVisibility, modalData]);\n\n  const cancelModal = () => {\n    dispatch(closeModal());\n    if(modalData.layer){\n      modalData.featureGroup.leafletElement.removeLayer(modalData.layer);\n    }\n    setLoading(false);\n  }\n\n  const renderOptionPriority = () => {\n    let options = [];\n    _.forEach(taskPriorities, (taskPriority, index) => {\n      options.push(\n        <Option key={index} value={taskPriority.value}>\n          {taskPriority.label}\n        </Option>\n      );\n    })\n    return (\n      <Select\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const renderOptionStatus = () => {\n    let options = [];\n    _.forEach(taskStatus, (status, index) => {\n      options.push(\n        <Option key={index} value={status.value}>\n          {status.label}\n        </Option>\n      );\n    })\n    return (\n      <Select\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const renderOptionAssignee = (users) => {\n    let options = [];\n    _.forEach(users, (user, index) => {\n      options.push(\n        <Option key={user.id} value={user.id}>\n          {user.name} | {user.email}\n        </Option>\n      );\n    })\n    return (\n      <Select\n        allowClear\n        size=\"large\"\n      >\n        <Option key={0} value={0}>\n          Not assigned\n        </Option>\n        {options}\n      </Select>\n    );\n  }\n\n  const renderOptionObject = (objects) => {\n    let options = [];\n    _.forEach(objects, (object, index) => {\n      options.push(\n        <Option key={object.id} value={object.id}>\n          {object.name}\n        </Option>\n      );\n    })\n    return (\n      <Select\n        allowClear\n        size=\"large\"\n      >\n        <Option key={0} value={0}>\n          No paddock\n        </Option>\n        {options}\n      </Select>\n    );\n  }\n\n  const handleSubmit = (e) => {\n    setLoading(true);\n\n    form\n      .validateFields()\n      .then(values => {\n        onStore(values);\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoading(false);\n      });\n  }\n\n  const onStore = (values) => {\n    const data = {\n      task:{\n        ...values.task,\n        due_date: values.task.due_date ? dateHelper.dateForAPI(values.task.due_date) : '',\n        point: dataTask.point,\n        property_id: props.propertyId\n      }\n    }\n\n    taskService.storeOrUpdateTasks(data, dataTask.id).then(res => {\n      if(res.code === '0000'){\n        props.onSaved();\n        cancelModal();\n        form.resetFields();\n      } else {\n        setLoading(false);\n      }\n    });\n  }\n\n  const editLocation = () => {\n    cancelModal();\n    props.editLocation();\n  }\n\n  return (\n    <TaskModalWrapper\n      className=\"user-access-modal\"\n      forceRender={true}\n      visible={modalVisibility}\n      title={ dataTask.id ? <IntlMessages id=\"propertyMapPage.editTask\" /> : <IntlMessages id=\"propertyMapPage.addTask\" /> }\n      onCancel={cancelModal}\n      maskClosable={false}\n      footer={[\n        <Button key=\"back\" onClick={cancelModal}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" onClick={handleSubmit} loading={loading}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n      ]}\n    >\n      {\n        modalLoading ?\n        <Loader /> :\n        <Form\n          form={form}\n          name=\"addEditTask\"\n          layout=\"vertical\"\n          scrollToFirstError\n          fields={fields}\n        >\n          <div className=\"form-body\">\n            <Form.Item\n              name={['task', 'title']}\n              className=\"isoInputWrapper\"\n              label=\"Title\"\n              rules={[\n                {\n                  required: true,\n                  message: 'This field is required',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"Input task title\"/>\n            </Form.Item>\n            <Form.Item\n              name={['task', 'priority']}\n              label=\"Priority\"\n              rules={[\n                {\n                  required: true,\n                  message: 'This field is required',\n                },\n              ]}\n            >\n              {renderOptionPriority()}\n            </Form.Item>\n            <Row>\n              <Col xs={{span: 24}} md={{span: 11}}>\n                <Form.Item\n                  name={['task', 'due_date']}\n                  className=\"isoInputWrapper\"\n                  label=\"Due Date\"\n                >\n                  <DatePicker size=\"large\"/>\n                </Form.Item>\n              </Col>\n              <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n                <Form.Item\n                  name={['task', 'status']}\n                  className=\"isoInputWrapper\"\n                  label=\"Status\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'This field is required',\n                    },\n                  ]}\n                >\n                  {renderOptionStatus()}\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{span: 24}} md={{span: dataTask.id ? 11 : 24}}>\n                <Form.Item\n                  name={['task', 'assignee_id']}\n                  className=\"isoInputWrapper\"\n                  label=\"Assignee\"\n                >\n                  {renderOptionAssignee(assignees)}\n                </Form.Item>\n              </Col>\n              {\n                dataTask.id &&\n                <Col xs={{span: 24}} md={{span: 11, offset: 2}}>\n                  <Form.Item\n                    name={['task', 'primary_object_id']}\n                    className=\"isoInputWrapper\"\n                    label=\"Object\"\n                  >\n                    {renderOptionObject(props.primaryObjects)}\n                  </Form.Item>\n                </Col>\n              }\n            </Row>\n            <Form.Item name={['task', 'details']} label=\"Details\">\n              <Input.TextArea />\n            </Form.Item>\n          </div>\n        </Form>\n      }\n    </TaskModalWrapper>\n  );\n}\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}