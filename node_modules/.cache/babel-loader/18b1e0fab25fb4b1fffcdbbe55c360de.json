{"ast":null,"code":"import \"antd/es/dropdown/style/css\";\nimport _Dropdown from \"antd/es/dropdown\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/PropertyMap.js\";\nimport React, { useState, useEffect } from 'react';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyMapPage from './PropertyMap.styles';\nimport { Map, TileLayer, FeatureGroup, Polygon, Tooltip } from 'react-leaflet';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { propertyService } from '@iso/services';\nimport { EditControl } from \"react-leaflet-draw\";\nimport PrimaryObjectModal from './components/PrimaryObject/PrimaryObjectModal';\nimport _ from 'lodash';\nimport { objectColors } from '@iso/constants/objectColors';\nimport { taskService, mobService, primaryObjectService } from '@iso/services';\nimport { v4 as uuidv4 } from 'uuid';\nimport Task from './components/Task/Task';\nimport Mob from './components/Mob/Mob';\nimport BtnSaveGroup from './components/BtnSaveGroup/BtnSaveGroup';\nimport btnSaveAction from '@iso/redux/btnSave/actions';\nimport modalActions from '@iso/redux/modal/actions';\nimport inside from 'point-in-polygon';\nimport Control from '@skyeer/react-leaflet-custom-control';\nimport AppLocale from '@iso/config/translation';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { store } from '@iso/redux/store';\n\nvar geodesy = require('leaflet-geodesy');\n\nconst {\n  show\n} = btnSaveAction;\nconst {\n  openModal\n} = modalActions;\n\nconst PropertyMap = () => {\n  const activePropertyId = useSelector(state => state.property.activePropertyId);\n  const [propertyId, setPropertyId] = useState(null);\n  const btnVisibility = useSelector(state => state.btnSave.btnVisibility);\n  const saveSuccess = useSelector(state => state.btnSave.saveSuccess);\n  const cancelSave = useSelector(state => state.btnSave.cancelSave);\n  const dataTransfer = useSelector(state => state.btnSave.data);\n  const [position, setPosition] = useState([-33.865143, 151.209900]);\n  const controlDraw = React.useRef(null);\n  const objectRef = React.useRef([]);\n  const [primaryObjects, setPrimaryObjects] = useState([]);\n  const [editableFG, setEditableFG] = useState(null);\n  const [currentLayer, setCurrentLayer] = useState(null);\n  const [currentObject, setCurrentObject] = useState(null);\n  const dispatch = useDispatch();\n  const modalData = useSelector(state => state.modal.modalData);\n  const {\n    locale\n  } = useSelector(state => state.LanguageSwitcher.language);\n  const currentAppLocale = AppLocale[locale];\n  const updatePropertyDetail = React.useCallback(id => {\n    propertyService.viewProperty(id).then(res => {\n      if (res.code === '0000') {\n        setPosition([res.property.lat, res.property.lng]);\n        setPrimaryObjects(res.primary_objects);\n      }\n    });\n  }, []);\n  const saveArea = React.useCallback(dataTransfer => {\n    var layer = objectRef.current[dataTransfer.dataId].leafletElement;\n    var points = dataTransfer.points;\n    var arrPoints = [];\n\n    for (var point of points[0]) {\n      arrPoints.push(Object.values(point));\n    }\n\n    var acreage = (geodesy.area(layer) / 10000).toFixed(2);\n    var dataTmp = {\n      primary_object: {\n        data_area: _.map(arrPoints, point => {\n          return point.slice(0, 2).toString().replace(',', ', ');\n        }),\n        acreage\n      }\n    };\n    primaryObjectService.updateArea(dataTmp, dataTransfer.dataId).then(res => {\n      if (res.code === '0000') {\n        // updatePropertyDetail(activePropertyId);\n        layer.editing.disable();\n      }\n    });\n  }, []);\n  const enableDrawing = React.useCallback(dataTransfer => {\n    if (currentObject) {\n      if (currentObject === 'addArea') {\n        enableAction('draw', 'polygon');\n      } else if (currentObject === 'addTask') {\n        enableAction('draw', 'marker');\n      } else if (currentObject === 'addMob') {\n        enableAction('draw', 'marker');\n      }\n    }\n  });\n  useEffect(() => {\n    if (currentObject) {\n      enableDrawing(currentObject);\n    }\n  }, [currentObject]);\n  const cancelSaveArea = React.useCallback((propertyId, dataObjectId) => {\n    var layer = objectRef.current[dataObjectId].leafletElement; // updatePropertyDetail(propertyId);\n\n    layer.editing.disable();\n  }, []);\n  useEffect(() => {\n    if (activePropertyId) {\n      setPropertyId(activePropertyId);\n      updatePropertyDetail(activePropertyId);\n    }\n  }, [activePropertyId, updatePropertyDetail]);\n  useEffect(() => {\n    if (saveSuccess && dataTransfer.type === 'area') {\n      saveArea(dataTransfer);\n    } else if (cancelSave && dataTransfer.type === 'area') {\n      cancelSaveArea(propertyId, dataTransfer.dataId);\n    }\n  }, [saveSuccess, saveArea, cancelSave, cancelSaveArea, propertyId, dataTransfer]);\n\n  const onEdited = editedObject => {\n    const objectTmp = _.map(primaryObjects, object => {\n      if (object.id === editedObject.id) {\n        return editedObject;\n      }\n\n      return object;\n    });\n\n    setPrimaryObjects(objectTmp);\n  };\n\n  const menu = () => /*#__PURE__*/React.createElement(_Menu, {\n    onClick: handleMenuClick.bind(this),\n    style: {\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Menu.Item, {\n    key: \"addArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Menu.Item, {\n    key: \"addTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Menu.Item, {\n    key: \"addMob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.mob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n\n  const enableAction = (actionType, value) => {\n    controlDraw.current.leafletElement._toolbars[actionType]._modes[value].handler.enable();\n  };\n\n  const handleMenuClick = e => {\n    setCurrentObject(e.key);\n\n    if (e.key === 'addArea') {\n      enableAction('draw', 'polygon');\n    } else if (e.key === 'addTask') {\n      enableAction('draw', 'marker');\n    } else if (e.key === 'addMob') {\n      var layer = null;\n      var type = 'mob';\n      var point = null;\n      var canCreate = false;\n      const modalData = {\n        featureGroup: editableFG,\n        layer,\n        type,\n        canCreate,\n        object: {\n          point\n        }\n      };\n      dispatch(openModal(modalData));\n    }\n  };\n\n  const onCreated = drawControl => {\n    var type = drawControl.layerType,\n        layer = drawControl.layer;\n    setCurrentLayer(layer);\n    console.log(layer);\n\n    if (type === 'polygon') {\n      handlePolygon(layer);\n    } else if (type === 'marker') {\n      handleMarker(layer);\n    }\n  };\n\n  const handleMarker = layer => {\n    let type = \"\";\n    let canCreate = true;\n    type = \"task\";\n    var point = layer.getLatLng();\n    const modalData = {\n      featureGroup: editableFG,\n      layer,\n      type,\n      canCreate,\n      object: {\n        point\n      }\n    };\n    dispatch(openModal(modalData));\n  };\n\n  const handlePolygon = layer => {\n    var points = layer.getLatLngs();\n    var arrPoints = [];\n\n    for (var point of points[0]) {\n      arrPoints.push(Object.values(point));\n    }\n\n    var acreage = (geodesy.area(layer) / 10000).toFixed(2);\n    const modalData = {\n      featureGroup: editableFG,\n      layer,\n      type: 'area',\n      object: {\n        coordinates: arrPoints,\n        acreage\n      }\n    };\n    dispatch(openModal(modalData));\n  };\n\n  const onFeatureGroupReady = reactFGref => {\n    // store the featureGroup ref for future access to content\n    setEditableFG(reactFGref);\n  };\n\n  const handleShowPrimaryObjects = objects => {\n    var html = [];\n\n    if (objects.length > 0) {\n      _.forEach(objects, function (object) {\n        const colorIndex = _.findIndex(objectColors, color => {\n          return color.value === object.color;\n        });\n\n        html.push( /*#__PURE__*/React.createElement(Polygon, {\n          key: object.id,\n          positions: object.area,\n          onClick: handleClickObject.bind(this, object),\n          onRemove: handleRemoveObject.bind(this, object),\n          onEdit: handleEditObject.bind(this, object),\n          color: objectColors[colorIndex].color,\n          className: \"primary-objects\",\n          ref: el => objectRef.current[object.id] = el,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          permanent: true,\n          direction: \"center\",\n          className: \"primary-objects-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }\n        }, object.name)));\n      });\n    }\n\n    return html;\n  };\n\n  const handleClickObject = (object, e) => {\n    if (!controlDraw.current.leafletElement._toolbars.edit._modes.remove.handler._enabled) {\n      if (!btnVisibility) {\n        const modalData = {\n          object,\n          type: 'area'\n        };\n        dispatch(openModal(modalData));\n      }\n    }\n  };\n\n  const [deletedObjs, setDeletedObjs] = useState([]);\n\n  const handleRemoveObject = (object, e) => {\n    deletedObjs.push(object.id);\n    setDeletedObjs(deletedObjs);\n  };\n\n  const [updatedObjs, setUpdatedObjs] = useState({});\n\n  const handleEditObject = (object, e) => {\n    let LatLngs = e.target.getLatLngs()[0];\n\n    let area = _.map(LatLngs, point => {\n      return [point.lat, point.lng];\n    });\n\n    let area2 = _.map(LatLngs, point => {\n      return point.lat + \", \" + point.lng;\n    });\n\n    object.area = area;\n    updatedObjs[object.id] = area2;\n    setUpdatedObjs(updatedObjs);\n  };\n\n  const editArea = () => {\n    const data = {\n      objectRef,\n      dataId: modalData.object.id,\n      type: 'area'\n    };\n    dispatch(show(data));\n    objectRef.current[modalData.object.id].leafletElement.editing.enable();\n  };\n\n  const onTest = () => {\n    console.log(objectRef);\n  };\n\n  const onMapDeleted = e => {\n    _.forEach(deletedMobs, function (mobId) {\n      mobService.destroy(mobId);\n    });\n\n    setDeletedMobs([]);\n\n    _.forEach(deletedTasks, function (taskId) {\n      taskService.destroy(taskId);\n    });\n\n    setDeletedTasks([]);\n\n    _.forEach(deletedObjs, function (objectId) {\n      primaryObjectService.destroy(objectId);\n    });\n\n    setDeletedObjs([]);\n  };\n\n  const [deletedMobs, setDeletedMobs] = useState([]);\n\n  const handleSetDeletedMobs = mobId => {\n    deletedMobs.push(mobId);\n    setDeletedMobs(deletedMobs);\n  };\n\n  const [deletedTasks, setDeletedTasks] = useState([]);\n\n  const handleSetDeletedTasks = taskId => {\n    deletedTasks.push(taskId);\n    setDeletedTasks(deletedTasks);\n  };\n\n  const onMapEdited = e => {\n    _.forEach(updatedTasks, function (taskData, taskId) {\n      const data = {\n        task: taskData\n      };\n      taskService.storeOrUpdateTasks(data, taskId);\n    });\n\n    setUpdatedTasks({});\n\n    _.forEach(updatedObjs, function (dataArea, objectId) {\n      const data = {\n        primary_object: {\n          data_area: dataArea\n        }\n      };\n      primaryObjectService.updateArea(data, objectId);\n    });\n\n    setUpdatedObjs({});\n  };\n\n  const [updatedTasks, setUpdatedTasks] = useState({});\n\n  const handeSetUpdatedTasks = (task, LatLng) => {\n    updatedTasks[task.id] = { ...task,\n      point: LatLng\n    };\n    setUpdatedTasks(updatedTasks);\n  };\n\n  const [showArea, setShowArea] = useState(true);\n  const [showTask, setShowTask] = useState(true);\n  const [showMob, setShowMob] = useState(true);\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    style: {\n      height: '100%',\n      paddingBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PropertyMapPage, {\n    className: `${showArea ? \"\" : \"not-show-area\"} ${showTask ? \"\" : \"not-show-task\"} ${showMob ? \"\" : \"not-show-mob\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: 13,\n    minZoom: 13,\n    maxZoom: 18,\n    zoomControl: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FeatureGroup, {\n    ref: featureGroupRef => {\n      onFeatureGroupReady(featureGroupRef);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    position: \"topleft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showArea,\n    onChange: () => setShowArea(!showArea),\n    id: \"show-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"show-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.showArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 19\n    }\n  })), \" \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showTask,\n    onChange: () => setShowTask(!showTask),\n    id: \"show-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"show-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.showTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  })), \" \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showMob,\n    onChange: () => setShowMob(!showMob),\n    id: \"show-mob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"show-mob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.showMob\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 19\n    }\n  })), \" \\xA0\")), /*#__PURE__*/React.createElement(Control, {\n    position: \"bottomright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Dropdown, {\n    overlay: menu(),\n    trigger: ['click'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 33\n      }\n    }),\n    type: \"primary\",\n    className: \"btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"propertyMapPage.add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }))), btnVisibility && /*#__PURE__*/React.createElement(BtnSaveGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(EditControl, {\n    position: \"topleft\",\n    onCreated: onCreated,\n    onEdited: onMapEdited,\n    onDeleted: onMapDeleted,\n    draw: {\n      marker: true,\n      polyline: false,\n      circle: false,\n      circlemarker: false,\n      rectangle: false,\n      polygon: {\n        allowIntersection: false,\n        showArea: true\n      }\n    },\n    ref: controlDraw,\n    key: uuidv4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }), handleShowPrimaryObjects(primaryObjects), /*#__PURE__*/React.createElement(Task, {\n    propertyId: propertyId,\n    currentLayer: currentLayer,\n    primaryObjects: primaryObjects,\n    controlDraw: controlDraw,\n    updatePropertyDetail: updatePropertyDetail,\n    handleSetDeletedTasks: handleSetDeletedTasks,\n    handeSetUpdatedTasks: handeSetUpdatedTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Mob, {\n    propertyId: propertyId,\n    controlDraw: controlDraw,\n    handleSetDeletedMobs: handleSetDeletedMobs,\n    primaryObjects: primaryObjects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(PrimaryObjectModal, {\n    propertyId: propertyId,\n    updatePropertyDetail: updatePropertyDetail,\n    editArea: editArea,\n    onEdited: onEdited,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PropertyMap;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/PropertyMap/PropertyMap.js"],"names":["React","useState","useEffect","LayoutWrapper","PageHeader","IntlMessages","PropertyMapPage","Map","TileLayer","FeatureGroup","Polygon","Tooltip","PlusOutlined","useSelector","useDispatch","propertyService","EditControl","PrimaryObjectModal","_","objectColors","taskService","mobService","primaryObjectService","v4","uuidv4","Task","Mob","BtnSaveGroup","btnSaveAction","modalActions","inside","Control","AppLocale","IntlProvider","Provider","store","geodesy","require","show","openModal","PropertyMap","activePropertyId","state","property","propertyId","setPropertyId","btnVisibility","btnSave","saveSuccess","cancelSave","dataTransfer","data","position","setPosition","controlDraw","useRef","objectRef","primaryObjects","setPrimaryObjects","editableFG","setEditableFG","currentLayer","setCurrentLayer","currentObject","setCurrentObject","dispatch","modalData","modal","locale","LanguageSwitcher","language","currentAppLocale","updatePropertyDetail","useCallback","id","viewProperty","then","res","code","lat","lng","primary_objects","saveArea","layer","current","dataId","leafletElement","points","arrPoints","point","push","Object","values","acreage","area","toFixed","dataTmp","primary_object","data_area","map","slice","toString","replace","updateArea","editing","disable","enableDrawing","enableAction","cancelSaveArea","dataObjectId","type","onEdited","editedObject","objectTmp","object","menu","handleMenuClick","bind","width","actionType","value","_toolbars","_modes","handler","enable","e","key","canCreate","featureGroup","onCreated","drawControl","layerType","console","log","handlePolygon","handleMarker","getLatLng","getLatLngs","coordinates","onFeatureGroupReady","reactFGref","handleShowPrimaryObjects","objects","html","length","forEach","colorIndex","findIndex","color","handleClickObject","handleRemoveObject","handleEditObject","el","name","edit","remove","_enabled","deletedObjs","setDeletedObjs","updatedObjs","setUpdatedObjs","LatLngs","target","area2","editArea","onTest","onMapDeleted","deletedMobs","mobId","destroy","setDeletedMobs","deletedTasks","taskId","setDeletedTasks","objectId","handleSetDeletedMobs","handleSetDeletedTasks","onMapEdited","updatedTasks","taskData","task","storeOrUpdateTasks","setUpdatedTasks","dataArea","handeSetUpdatedTasks","LatLng","showArea","setShowArea","showTask","setShowTask","showMob","setShowMob","height","paddingBottom","featureGroupRef","messages","marker","polyline","circle","circlemarker","rectangle","polygon","allowIntersection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyMapPage from './PropertyMap.styles';\nimport { Map, TileLayer, FeatureGroup, Polygon, Tooltip } from 'react-leaflet';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { propertyService } from '@iso/services';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { EditControl } from \"react-leaflet-draw\";\nimport PrimaryObjectModal from './components/PrimaryObject/PrimaryObjectModal';\nimport _ from 'lodash';\nimport { objectColors } from '@iso/constants/objectColors';\nimport { taskService, mobService, primaryObjectService } from '@iso/services';\nimport { v4 as uuidv4 } from 'uuid';\nimport Task from './components/Task/Task';\nimport Mob from './components/Mob/Mob';\nimport BtnSaveGroup from './components/BtnSaveGroup/BtnSaveGroup';\nimport btnSaveAction from '@iso/redux/btnSave/actions';\nimport modalActions from '@iso/redux/modal/actions';\nimport inside from 'point-in-polygon';\nimport Control from '@skyeer/react-leaflet-custom-control'\nimport AppLocale from '@iso/config/translation';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { store } from '@iso/redux/store';\n\nvar geodesy = require('leaflet-geodesy');\nconst { show } = btnSaveAction;\nconst { openModal } = modalActions;\n\nconst PropertyMap = () => {\n  const activePropertyId = useSelector((state) => state.property.activePropertyId);\n  const [propertyId, setPropertyId] = useState(null);\n  const btnVisibility = useSelector((state) => state.btnSave.btnVisibility);\n  const saveSuccess = useSelector((state) => state.btnSave.saveSuccess);\n  const cancelSave = useSelector((state) => state.btnSave.cancelSave);\n  const dataTransfer = useSelector((state) => state.btnSave.data);\n  const [position, setPosition] = useState([-33.865143, 151.209900]);\n  const controlDraw = React.useRef(null);\n  const objectRef = React.useRef([]);\n  const [primaryObjects, setPrimaryObjects] = useState([]);\n  const [editableFG, setEditableFG] = useState(null);\n  const [currentLayer, setCurrentLayer] = useState(null);\n  const [currentObject, setCurrentObject] = useState(null);\n  const dispatch = useDispatch();\n  const modalData = useSelector((state) => state.modal.modalData);\n  const { locale } = useSelector(state => state.LanguageSwitcher.language);\n  const currentAppLocale = AppLocale[locale];\n\n  const updatePropertyDetail = React.useCallback((id) => {\n    propertyService.viewProperty(id).then(res => {\n      if(res.code === '0000'){\n        setPosition([res.property.lat, res.property.lng]);\n        setPrimaryObjects(res.primary_objects);\n      }\n    })\n  }, []);\n\n  const saveArea = React.useCallback((dataTransfer) => {\n    var layer = objectRef.current[dataTransfer.dataId].leafletElement;\n\n    var points = dataTransfer.points;\n    var arrPoints = [];\n\n    for (var point of points[0]) {\n      arrPoints.push(Object.values(point));\n    }\n\n    var acreage = (geodesy.area(layer) / 10000).toFixed(2);\n\n    var dataTmp = {\n      primary_object:{\n        data_area: _.map(arrPoints, (point) => {\n          return point.slice(0, 2).toString().replace(',', ', ');\n        }),\n        acreage\n      }\n    }\n\n    primaryObjectService.updateArea(dataTmp, dataTransfer.dataId).then(res => {\n      if(res.code === '0000'){\n        // updatePropertyDetail(activePropertyId);\n        layer.editing.disable();\n      }\n    });\n  }, []);\n\n  const enableDrawing = React.useCallback((dataTransfer) => {\n    if(currentObject){\n      if(currentObject === 'addArea'){\n        enableAction('draw', 'polygon');\n      } else if(currentObject === 'addTask'){\n        enableAction('draw', 'marker');\n      } else if(currentObject === 'addMob'){\n        enableAction('draw', 'marker');\n      }\n    }\n  });\n\n  useEffect(() => {\n    if(currentObject){\n      enableDrawing(currentObject);\n    }\n  },[currentObject]);\n\n  const cancelSaveArea = React.useCallback((propertyId, dataObjectId) => {\n    var layer = objectRef.current[dataObjectId].leafletElement;\n    // updatePropertyDetail(propertyId);\n    layer.editing.disable();\n  }, []);\n\n  useEffect(() => {\n    if(activePropertyId){\n      setPropertyId(activePropertyId);\n      updatePropertyDetail(activePropertyId);\n    }    \n  }, [activePropertyId, updatePropertyDetail]);\n\n  useEffect(() => {\n    if(saveSuccess && dataTransfer.type === 'area'){\n      saveArea(dataTransfer);\n    } else if (cancelSave && dataTransfer.type === 'area'){\n      cancelSaveArea(propertyId, dataTransfer.dataId);\n    }\n  }, [saveSuccess, saveArea, cancelSave, cancelSaveArea, propertyId, dataTransfer])\n\n  const onEdited = (editedObject) => {\n    const objectTmp = _.map(primaryObjects, (object) => {\n      if(object.id === editedObject.id){\n        return editedObject;\n      }\n      return object;\n    })\n    setPrimaryObjects(objectTmp)\n  }\n\n  const menu = () => (\n    <Menu onClick={handleMenuClick.bind(this)} style={{width: '150px'}}>\n      <Menu.Item key=\"addArea\">\n        <IntlMessages id=\"propertyMapPage.area\" />\n      </Menu.Item>\n      <Menu.Item key=\"addTask\">\n        <IntlMessages id=\"propertyMapPage.task\" />\n      </Menu.Item>\n      <Menu.Item key=\"addMob\">\n        <IntlMessages id=\"propertyMapPage.mob\" />\n      </Menu.Item>\n    </Menu>\n  );\n\n  const enableAction = (actionType, value) => {\n    controlDraw.current.leafletElement._toolbars[actionType]._modes[value].handler.enable();\n  }\n\n  const handleMenuClick = (e) => {\n    setCurrentObject(e.key);\n    if(e.key === 'addArea'){\n      enableAction('draw', 'polygon');\n    } else if(e.key === 'addTask'){\n      enableAction('draw', 'marker');\n    } else if(e.key === 'addMob'){\n      var layer = null;\n      var type = 'mob';\n      var point = null;\n      var canCreate = false;\n      const modalData = {\n        featureGroup: editableFG,\n        layer,\n        type,\n        canCreate,\n        object:{\n          point\n        }\n      }\n      dispatch(openModal(modalData));\n      }\n  }\n\n  const onCreated = drawControl => {\n    var type = drawControl.layerType,\n    layer = drawControl.layer;\n    setCurrentLayer(layer);\n    console.log(layer);\n    if (type === 'polygon') {\n      handlePolygon(layer);\n    } else if(type === 'marker'){\n      handleMarker(layer);\n    }\n  }\n\n  const handleMarker = (layer) => {\n    let type = \"\";\n    let canCreate = true;\n    type = \"task\";\n\n    var point = layer.getLatLng();\n    const modalData = {\n      featureGroup: editableFG,\n      layer,\n      type,\n      canCreate,\n      object:{\n        point\n      }\n    }\n    dispatch(openModal(modalData));\n  }\n\n  const handlePolygon = (layer) => {\n    var points = layer.getLatLngs();\n    var arrPoints = [];\n\n    for (var point of points[0]) {\n      arrPoints.push(Object.values(point));\n    }\n\n    var acreage = (geodesy.area(layer) / 10000).toFixed(2);\n\n    const modalData = {\n      featureGroup: editableFG,\n      layer,\n      type: 'area',\n      object:{\n        coordinates: arrPoints,\n        acreage\n      }\n    }\n    dispatch(openModal(modalData));\n  }\n\n  const onFeatureGroupReady = reactFGref => {\n    // store the featureGroup ref for future access to content\n    setEditableFG(reactFGref);\n  };\n\n  const handleShowPrimaryObjects = (objects) => {\n    var html = [];\n    if(objects.length > 0){\n      _.forEach(objects, function(object){\n        const colorIndex = _.findIndex(objectColors, (color) => {\n          return color.value === object.color\n        });\n\n        html.push(\n          <Polygon key={object.id}\n            positions={object.area}\n            onClick={handleClickObject.bind(this, object)}\n            onRemove={handleRemoveObject.bind(this, object)}\n            onEdit={handleEditObject.bind(this, object)}\n            color={objectColors[colorIndex].color}\n            className='primary-objects'\n            ref={el => (objectRef.current[object.id] = el)}\n          >\n            <Tooltip permanent={true} direction=\"center\" className='primary-objects-tooltip'>{object.name}</Tooltip>\n          </Polygon>\n        );\n      });\n    }\n    return html;\n  }\n\n  const handleClickObject = (object, e) => {\n    if(!controlDraw.current.leafletElement._toolbars.edit._modes.remove.handler._enabled){\n      if(!btnVisibility){ \n        const modalData = {\n          object,\n          type: 'area'\n        }\n        dispatch(openModal(modalData));\n      }\n    }\n  }\n\n  const [deletedObjs, setDeletedObjs] = useState([]);\n  const handleRemoveObject = (object, e) => {\n    deletedObjs.push(object.id);\n    setDeletedObjs(deletedObjs);\n  }\n\n  const [updatedObjs, setUpdatedObjs] = useState({});\n  const handleEditObject = (object, e) => {\n    let LatLngs = e.target.getLatLngs()[0];\n    \n    let area = _.map(LatLngs, (point) => {\n      return [point.lat, point.lng];\n    });\n    let area2 = _.map(LatLngs, (point) => {\n      return point.lat + \", \" + point.lng;\n    });\n\n    object.area = area;\n    updatedObjs[object.id] = area2;\n    setUpdatedObjs(updatedObjs);\n  }\n\n  const editArea = () => {\n    const data = {\n      objectRef,\n      dataId: modalData.object.id,\n      type: 'area'\n    }\n    dispatch(show(data));\n    objectRef.current[modalData.object.id].leafletElement.editing.enable();\n  }\n\n  const onTest = () => {\n    console.log(objectRef);\n  }\n\n  const onMapDeleted = (e) => {\n    _.forEach(deletedMobs, function(mobId){\n      mobService.destroy(mobId);\n    });   \n    setDeletedMobs([]); \n\n    _.forEach(deletedTasks, function(taskId){\n      taskService.destroy(taskId);\n    });   \n    setDeletedTasks([]);\n\n    _.forEach(deletedObjs, function(objectId){\n      primaryObjectService.destroy(objectId);\n    });  \n    setDeletedObjs([]); \n  }\n\n  const [deletedMobs, setDeletedMobs] = useState([]);\n  const handleSetDeletedMobs = (mobId) => {\n    deletedMobs.push(mobId);\n    setDeletedMobs(deletedMobs);\n  }\n\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const handleSetDeletedTasks = (taskId) => {\n    deletedTasks.push(taskId);\n    setDeletedTasks(deletedTasks);\n  }\n\n  const onMapEdited = (e) => {\n    _.forEach(updatedTasks, function(taskData, taskId){\n      const data = {\n        task: taskData\n      }\n      taskService.storeOrUpdateTasks(data, taskId);\n    });     \n    setUpdatedTasks({});\n\n    _.forEach(updatedObjs, function(dataArea, objectId){\n      const data = {\n        primary_object: {\n          data_area: dataArea\n        }\n      }\n      primaryObjectService.updateArea(data, objectId)\n    });   \n\n    setUpdatedObjs({});  \n  }\n\n  const [updatedTasks, setUpdatedTasks] = useState({});\n  const handeSetUpdatedTasks = (task, LatLng) => {\n    updatedTasks[task.id] = {\n      ...task,\n      point: LatLng\n    }\n    setUpdatedTasks(updatedTasks);\n  }\n\n  const [showArea, setShowArea] = useState(true);\n  const [showTask, setShowTask] = useState(true);\n  const [showMob, setShowMob] = useState(true);\n\n  return (\n    <LayoutWrapper style={{height: '100%', paddingBottom: '0'}}>\n      <PropertyMapPage className={`${showArea ? \"\" : \"not-show-area\"} ${showTask ? \"\" : \"not-show-task\"} ${showMob ? \"\" : \"not-show-mob\"}`} >\n        <Map center={position} zoom={13} minZoom={13} maxZoom={18} zoomControl={false}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          <FeatureGroup\n            ref={featureGroupRef => {\n                onFeatureGroupReady(featureGroupRef);\n            }}\n          >\n            <Control position=\"topleft\">\n              <IntlProvider\n                locale={currentAppLocale.locale}\n                messages={currentAppLocale.messages}\n              >\n                <input type=\"checkbox\" checked={showArea} onChange={() => setShowArea(!showArea)} id='show-area'/> \n                <label htmlFor=\"show-area\">\n                  <IntlMessages id=\"propertyMapPage.showArea\" />\n                </label> &nbsp; \n                \n                <input type=\"checkbox\" checked={showTask} onChange={() => setShowTask(!showTask)} id='show-task'/> \n                <label htmlFor=\"show-task\">\n                  <IntlMessages id=\"propertyMapPage.showTask\" />\n                </label> &nbsp; \n                \n                <input type=\"checkbox\" checked={showMob}  onChange={() => setShowMob(!showMob)}   id='show-mob'/> \n                <label htmlFor=\"show-mob\">\n                  <IntlMessages id=\"propertyMapPage.showMob\" />\n                </label> &nbsp; \n              </IntlProvider>\n            </Control>\n\n            <Control position=\"bottomright\">\n              <Provider store={store}>\n              <IntlProvider\n                locale={currentAppLocale.locale}\n                messages={currentAppLocale.messages}\n              >\n              <div className=\"leftComponent\">\n                <Dropdown overlay={menu()} trigger={['click']}>\n                  <Button icon={<PlusOutlined />} type=\"primary\" className=\"btn-success\">\n                    <IntlMessages id=\"propertyMapPage.add\" />\n                  </Button>\n                </Dropdown>\n\n                {\n                  btnVisibility &&\n                  <BtnSaveGroup />\n                }\n              </div>                            \n              </IntlProvider>\n              </Provider>\n            </Control>\n            \n            <EditControl\n              position='topleft'\n              onCreated={onCreated}\n              onEdited={onMapEdited}\n              onDeleted={onMapDeleted}\n              draw={{\n                marker: true,\n                polyline: false,\n                circle: false,\n                circlemarker: false,\n                rectangle: false,\n                polygon: {\n                  allowIntersection: false,\n                  showArea: true\n                }\n              }}\n              ref={controlDraw}\n              key={uuidv4()}\n            />\n\n            { handleShowPrimaryObjects(primaryObjects) }\n\n            <Task\n              propertyId={propertyId}\n              currentLayer={currentLayer}\n              primaryObjects={primaryObjects}\n              controlDraw={controlDraw}\n              updatePropertyDetail={updatePropertyDetail}\n              handleSetDeletedTasks={handleSetDeletedTasks}\n              handeSetUpdatedTasks={handeSetUpdatedTasks}\n            />\n\n            <Mob\n              propertyId={propertyId}\n              controlDraw={controlDraw}\n              handleSetDeletedMobs={handleSetDeletedMobs}\n              primaryObjects={primaryObjects}\n            />\n\n          </FeatureGroup>\n        </Map>\n        <PrimaryObjectModal \n          propertyId={propertyId} \n          updatePropertyDetail={updatePropertyDetail}\n          editArea={editArea}\n          onEdited={onEdited}\n        />\n      </PropertyMapPage>\n    </LayoutWrapper>\n  );\n}\n\nexport default PropertyMap;\n"]},"metadata":{},"sourceType":"module"}