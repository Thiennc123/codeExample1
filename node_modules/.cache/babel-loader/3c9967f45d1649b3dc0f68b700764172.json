{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/Layout/Sidebar/Sidebar.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { options } from './options';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Menu from '@iso/components/uielements/menu';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/logo';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nconst {\n  Sider\n} = _Layout;\nconst {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed\n} = appActions;\nexport default function Sidebar() {\n  const dispatch = useDispatch();\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    current,\n    height\n  } = useSelector(state => state.App);\n  const customizedTheme = useSelector(state => state.ThemeSwitcher.sidebarTheme);\n  const properties = useSelector(state => state.property.properties);\n  const activeId = useSelector(state => state.property.activePropertyId);\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100); // clearTimeout(timer);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(key => !(openKeys.indexOf(key) > -1));\n    const latestCloseKey = openKeys.find(key => !(newOpenKeys.indexOf(key) > -1));\n    let nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = collapsed && !openDrawer;\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n\n  const onMouseEnter = event => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const styling = {\n    backgroundColor: customizedTheme.backgroundColor\n  };\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: customizedTheme.textColor\n  };\n  const submenuColor = {\n    color: customizedTheme.textColor\n  };\n  return /*#__PURE__*/React.createElement(SidebarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sider, {\n    trigger: null,\n    collapsible: true,\n    collapsed: isCollapsed,\n    width: 240,\n    className: \"isomorphicSidebar\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    style: styling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    collapsed: isCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    onClick: handleClick,\n    theme: \"dark\",\n    className: \"isoDashboardMenu\",\n    mode: mode,\n    openKeys: isCollapsed ? [] : openKeys,\n    selectedKeys: current,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, options(properties, activeId).map(singleOption => /*#__PURE__*/React.createElement(SidebarMenu, {\n    key: singleOption.key,\n    submenuStyle: submenuStyle,\n    submenuColor: submenuColor,\n    singleOption: singleOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/Layout/Sidebar/Sidebar.js"],"names":["React","useDispatch","useSelector","options","Scrollbars","Menu","appActions","Logo","SidebarWrapper","SidebarMenu","Sider","toggleOpenDrawer","changeOpenKeys","changeCurrent","toggleCollapsed","Sidebar","dispatch","view","openKeys","collapsed","openDrawer","current","height","state","App","customizedTheme","ThemeSwitcher","sidebarTheme","properties","property","activeId","activePropertyId","handleClick","e","key","setTimeout","onOpenChange","newOpenKeys","latestOpenKey","find","indexOf","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","map","sub3","isCollapsed","mode","onMouseEnter","event","onMouseLeave","styling","backgroundColor","submenuStyle","color","textColor","submenuColor","singleOption"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Layout } from 'antd';\nimport { options } from './options';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Menu from '@iso/components/uielements/menu';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/logo';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\n\nconst { Sider } = Layout;\n\nconst {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed,\n} = appActions;\n\nexport default function Sidebar() {\n  const dispatch = useDispatch();\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    current,\n    height,\n  } = useSelector(state => state.App);\n  const customizedTheme = useSelector(\n    state => state.ThemeSwitcher.sidebarTheme\n  );\n  const properties = useSelector((state) => state.property.properties);\n  const activeId = useSelector((state) => state.property.activePropertyId);\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed());\n        // dispatch(toggleOpenDrawer());\n      }, 100);\n\n      // clearTimeout(timer);\n    }\n  }\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(\n      key => !(openKeys.indexOf(key) > -1)\n    );\n    const latestCloseKey = openKeys.find(\n      key => !(newOpenKeys.indexOf(key) > -1)\n    );\n    let nextOpenKeys = [];\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2'],\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = collapsed && !openDrawer;\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n  const onMouseEnter = event => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n    return;\n  };\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n    return;\n  };\n  const styling = {\n    backgroundColor: customizedTheme.backgroundColor,\n  };\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: customizedTheme.textColor,\n  };\n  const submenuColor = {\n    color: customizedTheme.textColor,\n  };\n  return (\n    <SidebarWrapper>\n      <Sider\n        trigger={null}\n        collapsible={true}\n        collapsed={isCollapsed}\n        width={240}\n        className=\"isomorphicSidebar\"\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={styling}\n      >\n        <Logo collapsed={isCollapsed} />\n        <Scrollbars style={{ height: height - 70 }}>\n          <Menu\n            onClick={handleClick}\n            theme=\"dark\"\n            className=\"isoDashboardMenu\"\n            mode={mode}\n            openKeys={isCollapsed ? [] : openKeys}\n            selectedKeys={current}\n            onOpenChange={onOpenChange}\n          >\n            {options(properties, activeId).map(singleOption => (\n              <SidebarMenu\n                key={singleOption.key}\n                submenuStyle={submenuStyle}\n                submenuColor={submenuColor}\n                singleOption={singleOption}\n              />\n            ))}\n          </Menu>\n        </Scrollbars>\n      </Sider>\n    </SidebarWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}