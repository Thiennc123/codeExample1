{"ast":null,"code":"import { propertyService } from '@iso/services';\nconst actions = {\n  STORE_PROPERTIES: 'STORE_PROPERTIES',\n  CHANGE_ACTIVITY: 'CHANGE_ACTIVITY',\n  changeActiveProperty: activePropertyId => {\n    return dispatch => {\n      dispatch(changeActive(activePropertyId));\n    };\n  },\n  loadProperties: callback => {\n    return dispatch => {\n      propertyService.getProperties().then(res => {\n        if (res.code === '0000') {\n          if (res.properties.length === 1) {\n            localStorage.setItem('active_property', JSON.stringify(res.properties[0]));\n            dispatch(changeActive(res.properties[0].id));\n          }\n\n          dispatch(storeProperties(res.properties));\n\n          if (typeof callback === 'function') {\n            callback();\n          }\n        }\n      });\n    };\n  }\n};\n\nfunction storeProperties(properties) {\n  return {\n    type: actions.STORE_PROPERTIES,\n    properties\n  };\n}\n\nfunction changeActive(activePropertyId) {\n  return {\n    type: actions.CHANGE_ACTIVITY,\n    activePropertyId\n  };\n}\n\nexport default actions;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/redux/property/actions.js"],"names":["propertyService","actions","STORE_PROPERTIES","CHANGE_ACTIVITY","changeActiveProperty","activePropertyId","dispatch","changeActive","loadProperties","callback","getProperties","then","res","code","properties","length","localStorage","setItem","JSON","stringify","id","storeProperties","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAE,kBADJ;AAEdC,EAAAA,eAAe,EAAE,iBAFH;AAIdC,EAAAA,oBAAoB,EAAGC,gBAAD,IAAsB;AAC1C,WAAOC,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACC,YAAY,CAACF,gBAAD,CAAb,CAAR;AACD,KAFD;AAGD,GARa;AASdG,EAAAA,cAAc,EAAGC,QAAD,IAAc;AAC5B,WAAOH,QAAQ,IAAI;AACjBN,MAAAA,eAAe,CAACU,aAAhB,GAAgCC,IAAhC,CAAqCC,GAAG,IAAI;AAC1C,YAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrB,cAAGD,GAAG,CAACE,UAAJ,CAAeC,MAAf,KAA0B,CAA7B,EAA+B;AAC7BC,YAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,UAAJ,CAAe,CAAf,CAAf,CAAxC;AACAR,YAAAA,QAAQ,CAACC,YAAY,CAACK,GAAG,CAACE,UAAJ,CAAe,CAAf,EAAkBM,EAAnB,CAAb,CAAR;AACD;;AACDd,UAAAA,QAAQ,CAACe,eAAe,CAACT,GAAG,CAACE,UAAL,CAAhB,CAAR;;AACA,cAAG,OAAOL,QAAP,KAAoB,UAAvB,EAAkC;AAChCA,YAAAA,QAAQ;AACT;AACF;AACF,OAXD;AAYD,KAbD;AAcD;AAxBa,CAAhB;;AA2BA,SAASY,eAAT,CAAyBP,UAAzB,EAAqC;AACnC,SAAO;AACLQ,IAAAA,IAAI,EAAErB,OAAO,CAACC,gBADT;AAELY,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBF,gBAAtB,EAAuC;AACrC,SAAO;AACLiB,IAAAA,IAAI,EAAErB,OAAO,CAACE,eADT;AAELE,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeJ,OAAf","sourcesContent":["import { propertyService } from '@iso/services';\n\nconst actions = {\n  STORE_PROPERTIES: 'STORE_PROPERTIES',\n  CHANGE_ACTIVITY: 'CHANGE_ACTIVITY',\n  \n  changeActiveProperty: (activePropertyId) => {\n    return dispatch => {\n      dispatch(changeActive(activePropertyId));\n    }\n  },\n  loadProperties: (callback) => {\n    return dispatch => {\n      propertyService.getProperties().then(res => {\n        if(res.code === '0000'){\n          if(res.properties.length === 1){\n            localStorage.setItem('active_property', JSON.stringify(res.properties[0]));\n            dispatch(changeActive(res.properties[0].id));\n          }\n          dispatch(storeProperties(res.properties));\n          if(typeof callback === 'function'){\n            callback();\n          }\n        }\n      });\n    }\n  }\n};\n\nfunction storeProperties(properties) {\n  return {\n    type: actions.STORE_PROPERTIES,\n    properties,\n  }\n}\n\nfunction changeActive(activePropertyId){\n  return {\n    type: actions.CHANGE_ACTIVITY,\n    activePropertyId\n  }\n}\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}