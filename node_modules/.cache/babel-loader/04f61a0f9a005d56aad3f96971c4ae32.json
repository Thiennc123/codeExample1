{"ast":null,"code":"import \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/thiennc/projects/airagri-frontend/src/containers/Pages/Property/UserAccessModal.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyModalWrapper from './PropertyModal.styles';\nimport SimpleTable from '@iso/components/Tables/SimpleTable';\nimport { configs } from '@iso/components/Tables/configs';\nimport fakeData from '@iso/components/Tables/data';\nimport { CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport { propertyService, userService, permissionService } from '@iso/services';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport Loader from '@iso/components/utility/loader';\nconst {\n  Option\n} = _Select;\n\nconst UserAccessModal = props => {\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const dataList = new fakeData(users.length, users);\n\n  const [form] = _Form.useForm();\n\n  const permissions = useSelector(state => state.permission.permissions);\n  const [showForm, setShowForm] = useState(false);\n  const updateDataTable = useCallback(() => {\n    propertyService.getListUsersOfProperty(props.propertyId).then(res => {\n      if (res.code === '0000') {\n        setUsers(res.users);\n        setModalLoading(false);\n      }\n    });\n  }, [props]);\n  useEffect(() => {\n    if (props.propertyId) {\n      updateDataTable();\n      permissionService.getUserPermission(props.propertyId).then(res => {\n        if (res.code === '0000') {\n          setShowForm(res.permission === \"owner\" || res.permission === \"admin\");\n        }\n      });\n    }\n  }, [props, updateDataTable]);\n\n  const cancelModal = () => {\n    props.cancelModal();\n    form.resetFields();\n    setLoading(false);\n  };\n\n  const customColumns = () => {\n    const columns = [{\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"antTable.title.user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }\n      }),\n      key: 'name',\n      width: 100,\n      render: object => configs.renderCell(object, 'TextCell', 'name')\n    }, {\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"antTable.title.email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }\n      }),\n      key: 'email',\n      width: 100,\n      render: object => configs.renderCell(object, 'TextCell', 'email')\n    }, {\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"antTable.title.permission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }\n      }),\n      key: 'permission',\n      width: 100,\n      render: object => configs.renderCell(object, 'TextCell', 'permission')\n    }, {\n      title: /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"antTable.title.status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }\n      }),\n      key: 'status',\n      width: 100,\n      align: 'center',\n      render: object => {\n        return object.status ? /*#__PURE__*/React.createElement(CheckCircleFilled, {\n          style: {\n            color: '#65bb38',\n            fontSize: '18px'\n          },\n          title: \"Active\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(ExclamationCircleFilled, {\n          style: {\n            color: '#ffcc00',\n            fontSize: '18px'\n          },\n          title: \"Outgoing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        });\n      }\n    }];\n\n    let indexUserOutgoing = _.findIndex(users, function (user) {\n      return user.status === false;\n    });\n\n    if (indexUserOutgoing !== -1) {\n      columns.push({\n        title: '',\n        key: 'cancelInvite',\n        width: 100,\n        render: object => {\n          return !object.status && /*#__PURE__*/React.createElement(_Button, {\n            key: \"submit\",\n            onClick: handleCancelInvite.bind(this, object),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(IntlMessages, {\n            id: \"propertyPage.modal.cancelInvite\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 18\n            }\n          }));\n        }\n      });\n    }\n\n    return columns;\n  };\n\n  const handleCancelInvite = object => {\n    setModalLoading(true);\n    propertyService.cancelInviteUser(props.propertyId, object.id).then(res => {\n      if (res.code === '0000') {\n        updateDataTable();\n      }\n    });\n  };\n\n  const renderOptionsPermission = () => {\n    let options = [];\n\n    _.forEach(permissions, permission => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        key: permission.id,\n        value: permission.slug,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, permission.name));\n    });\n\n    return /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"Select a permission\",\n      allowClear: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, options);\n  };\n\n  const handleSubmit = e => {\n    setLoading(true);\n    form.validateFields().then(values => {\n      setModalLoading(true);\n      onStore(values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n      setLoading(false);\n    });\n  };\n\n  const onStore = values => {\n    propertyService.inviteUser(props.propertyId, values).then(res => {\n      if (res.code === '0000') {\n        updateDataTable();\n        form.resetFields();\n        setLoading(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PropertyModalWrapper, {\n    className: \"user-access-modal\",\n    forceRender: true,\n    visible: props.visible,\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.userAccess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }\n    }),\n    onCancel: cancelModal,\n    footer: [/*#__PURE__*/React.createElement(_Button, {\n      key: \"back\",\n      onClick: cancelModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(_Button, {\n      key: \"submit\",\n      className: \"btn-success\",\n      type: \"primary\",\n      loading: loading,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"propertyPage.modal.save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 12\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, modalLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(SimpleTable, {\n    columns: customColumns(),\n    dataList: dataList ? dataList : new fakeData(0, []),\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    name: \"inviteUser\",\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, showForm && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Invite User Form\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"user_email\",\n    className: \"isoInputWrapper\",\n    label: \"User Email\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }, {\n      type: 'email',\n      message: 'The input is not valid Email'\n    }, () => ({\n      validator(rule, value) {\n        if (value) return userService.checkEmailExistsInProperty(value, props.propertyId);else return Promise.resolve();\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    className: \"pac-target-input\",\n    size: \"large\",\n    placeholder: \"Input user email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"permission\",\n    label: \"Permission\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, renderOptionsPermission())))));\n};\n\nexport default UserAccessModal;","map":{"version":3,"sources":["/home/thiennc/projects/airagri-frontend/src/containers/Pages/Property/UserAccessModal.js"],"names":["React","useState","useEffect","useCallback","IntlMessages","PropertyModalWrapper","SimpleTable","configs","fakeData","CheckCircleFilled","ExclamationCircleFilled","propertyService","userService","permissionService","useSelector","_","Loader","Option","UserAccessModal","props","loading","setLoading","modalLoading","setModalLoading","users","setUsers","dataList","length","form","useForm","permissions","state","permission","showForm","setShowForm","updateDataTable","getListUsersOfProperty","propertyId","then","res","code","getUserPermission","cancelModal","resetFields","customColumns","columns","title","key","width","render","object","renderCell","align","status","color","fontSize","indexUserOutgoing","findIndex","user","push","handleCancelInvite","bind","cancelInviteUser","id","renderOptionsPermission","options","forEach","slug","name","handleSubmit","e","validateFields","values","onStore","catch","info","console","log","inviteUser","visible","required","message","type","validator","rule","value","checkEmailExistsInProperty","Promise","resolve"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,mBAA3D;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,iBAAvC,QAAgE,eAAhE;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMyB,QAAQ,GAAG,IAAIlB,QAAJ,CAAagB,KAAK,CAACG,MAAnB,EAA2BH,KAA3B,CAAjB;;AACA,QAAM,CAACI,IAAD,IAAS,MAAKC,OAAL,EAAf;;AACA,QAAMC,WAAW,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,WAA3B,CAA/B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMkC,eAAe,GAAGhC,WAAW,CAAC,MAAM;AACxCQ,IAAAA,eAAe,CAACyB,sBAAhB,CAAuCjB,KAAK,CAACkB,UAA7C,EAAyDC,IAAzD,CAA8DC,GAAG,IAAI;AACnE,UAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrBf,QAAAA,QAAQ,CAACc,GAAG,CAACf,KAAL,CAAR;AACAD,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KALD;AAMD,GAPkC,EAOhC,CAACJ,KAAD,CAPgC,CAAnC;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGiB,KAAK,CAACkB,UAAT,EAAoB;AAClBF,MAAAA,eAAe;AACftB,MAAAA,iBAAiB,CAAC4B,iBAAlB,CAAoCtB,KAAK,CAACkB,UAA1C,EAAsDC,IAAtD,CAA2DC,GAAG,IAAI;AAChE,YAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrBN,UAAAA,WAAW,CAACK,GAAG,CAACP,UAAJ,KAAmB,OAAnB,IAA8BO,GAAG,CAACP,UAAJ,KAAmB,OAAlD,CAAX;AACD;AACF,OAJD;AAKD;AACF,GATQ,EASN,CAACb,KAAD,EAAQgB,eAAR,CATM,CAAT;;AAWA,QAAMO,WAAW,GAAG,MAAM;AACxBvB,IAAAA,KAAK,CAACuB,WAAN;AACAd,IAAAA,IAAI,CAACe,WAAL;AACAtB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,QAAMuB,aAAa,GAAG,MAAM;AAC1B,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AAEEC,MAAAA,GAAG,EAAE,MAFP;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEC,MAAAA,MAAM,EAAEC,MAAM,IAAI3C,OAAO,CAAC4C,UAAR,CAAmBD,MAAnB,EAA2B,UAA3B,EAAuC,MAAvC;AAJpB,KADc,EAOd;AACEJ,MAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AAEEC,MAAAA,GAAG,EAAE,OAFP;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEC,MAAAA,MAAM,EAAEC,MAAM,IAAI3C,OAAO,CAAC4C,UAAR,CAAmBD,MAAnB,EAA2B,UAA3B,EAAuC,OAAvC;AAJpB,KAPc,EAad;AACEJ,MAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AAEEC,MAAAA,GAAG,EAAE,YAFP;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEC,MAAAA,MAAM,EAAEC,MAAM,IAAI3C,OAAO,CAAC4C,UAAR,CAAmBD,MAAnB,EAA2B,UAA3B,EAAuC,YAAvC;AAJpB,KAbc,EAmBd;AACEJ,MAAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AAEEC,MAAAA,GAAG,EAAE,QAFP;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEI,MAAAA,KAAK,EAAE,QAJT;AAKEH,MAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB,eACEA,MAAM,CAACG,MAAP,gBACA,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,SAAR;AAAmBC,YAAAA,QAAQ,EAAE;AAA7B,WAA1B;AAAgE,UAAA,KAAK,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,gBAEE,oBAAC,uBAAD;AAAyB,UAAA,KAAK,EAAE;AAACD,YAAAA,KAAK,EAAE,SAAR;AAAmBC,YAAAA,QAAQ,EAAE;AAA7B,WAAhC;AAAsE,UAAA,KAAK,EAAC,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKD;AAXH,KAnBc,CAAhB;;AAkCA,QAAIC,iBAAiB,GAAGzC,CAAC,CAAC0C,SAAF,CAAYjC,KAAZ,EAAmB,UAASkC,IAAT,EAAc;AACvD,aAAOA,IAAI,CAACL,MAAL,KAAgB,KAAvB;AACD,KAFuB,CAAxB;;AAIA,QAAGG,iBAAiB,KAAK,CAAC,CAA1B,EAA4B;AAC1BX,MAAAA,OAAO,CAACc,IAAR,CACE;AACEb,QAAAA,KAAK,EAAE,EADT;AAEEC,QAAAA,GAAG,EAAE,cAFP;AAGEC,QAAAA,KAAK,EAAE,GAHT;AAIEC,QAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB,iBACE,CAACA,MAAM,CAACG,MAAR,iBACA;AAAQ,YAAA,GAAG,EAAC,QAAZ;AAAqB,YAAA,OAAO,EAAEO,kBAAkB,CAACC,IAAnB,CAAwB,IAAxB,EAA8BX,MAA9B,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG,oBAAC,YAAD;AAAc,YAAA,EAAE,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAFF;AAMD;AAXH,OADF;AAeD;;AAED,WAAOL,OAAP;AACD,GA1DD;;AA4DA,QAAMe,kBAAkB,GAAIV,MAAD,IAAY;AACrC3B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAZ,IAAAA,eAAe,CAACmD,gBAAhB,CAAiC3C,KAAK,CAACkB,UAAvC,EAAmDa,MAAM,CAACa,EAA1D,EAA8DzB,IAA9D,CAAmEC,GAAG,IAAI;AACxE,UAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrBL,QAAAA,eAAe;AAChB;AACF,KAJD;AAKD,GAPD;;AASA,QAAM6B,uBAAuB,GAAG,MAAM;AACpC,QAAIC,OAAO,GAAG,EAAd;;AACAlD,IAAAA,CAAC,CAACmD,OAAF,CAAUpC,WAAV,EAAwBE,UAAD,IAAgB;AACrCiC,MAAAA,OAAO,CAACN,IAAR,eACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAE3B,UAAU,CAAC+B,EAAxB;AAA4B,QAAA,KAAK,EAAE/B,UAAU,CAACmC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDnC,UAAU,CAACoC,IAAhE,CADF;AAGD,KAJD;;AAKA,wBACE;AACE,MAAA,WAAW,EAAC,qBADd;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGH,OALH,CADF;AASD,GAhBD;;AAkBA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BjD,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAO,IAAAA,IAAI,CACD2C,cADH,GAEGjC,IAFH,CAEQkC,MAAM,IAAI;AACdjD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAkD,MAAAA,OAAO,CAACD,MAAD,CAAP;AACD,KALH,EAMGE,KANH,CAMSC,IAAI,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACAtD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH;AAUD,GAbD;;AAeA,QAAMoD,OAAO,GAAID,MAAD,IAAY;AAC1B7D,IAAAA,eAAe,CAACmE,UAAhB,CAA2B3D,KAAK,CAACkB,UAAjC,EAA6CmC,MAA7C,EAAqDlC,IAArD,CAA0DC,GAAG,IAAI;AAC/D,UAAGA,GAAG,CAACC,IAAJ,KAAa,MAAhB,EAAuB;AACrBL,QAAAA,eAAe;AACfP,QAAAA,IAAI,CAACe,WAAL;AACAtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAND;AAOD,GARD;;AAUA,sBACE,oBAAC,oBAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAAC4D,OAHjB;AAIE,IAAA,KAAK,eAAE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJT;AAKE,IAAA,QAAQ,EAAErC,WALZ;AAME,IAAA,MAAM,EAAE,cACN;AAAQ,MAAA,GAAG,EAAC,MAAZ;AAAmB,MAAA,OAAO,EAAEA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADM,eAIN;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,aAA/B;AAA6C,MAAA,IAAI,EAAC,SAAlD;AAA4D,MAAA,OAAO,EAAEtB,OAArE;AAA8E,MAAA,OAAO,EAAEiD,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAJM,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBI/C,YAAY,gBACZ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,gBAEZ,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEsB,aAAa,EAAnC;AAAuC,IAAA,QAAQ,EAAElB,QAAQ,GAAGA,QAAH,GAAc,IAAIlB,QAAJ,CAAa,CAAb,EAAgB,EAAhB,CAAvE;AAA4F,IAAA,UAAU,EAAE,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAqBE;AACE,IAAA,IAAI,EAAEoB,IADR;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,MAAM,EAAC,UAHT;AAIE,IAAA,kBAAkB,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOIK,QAAQ,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0BAAM,IAAN;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,KAAK,EAAE,CACL;AACE+C,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEC,MAAAA,IAAI,EAAE,OADR;AAEED,MAAAA,OAAO,EAAE;AAFX,KALK,EASL,OAAO;AACLE,MAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,YAAGA,KAAH,EACE,OAAOzE,WAAW,CAAC0E,0BAAZ,CAAuCD,KAAvC,EAA8ClE,KAAK,CAACkB,UAApD,CAAP,CADF,KAGE,OAAOkD,OAAO,CAACC,OAAR,EAAP;AACH;;AANI,KAAP,CATK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAuBE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAiD,IAAA,WAAW,EAAC,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF,eA0BE,0BAAM,IAAN;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,KAAK,EAAE,CACL;AACER,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGjB,uBAAuB,EAV1B,CA1BF,CAJF,CARJ,CArBF,CADF;AA8ED,CAjOD;;AAmOA,eAAe9C,eAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Input, Button, Select } from 'antd';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport PropertyModalWrapper from './PropertyModal.styles';\nimport SimpleTable from '@iso/components/Tables/SimpleTable';\nimport { configs } from '@iso/components/Tables/configs';\nimport fakeData from '@iso/components/Tables/data';\nimport { CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport { propertyService, userService, permissionService } from '@iso/services';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport Loader from '@iso/components/utility/loader';\n\nconst { Option } = Select;\n\nconst UserAccessModal = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const dataList = new fakeData(users.length, users);\n  const [form] = Form.useForm();\n  const permissions = useSelector(state => state.permission.permissions);\n  const [showForm, setShowForm] = useState(false);\n\n  const updateDataTable = useCallback(() => {\n    propertyService.getListUsersOfProperty(props.propertyId).then(res => {\n      if(res.code === '0000'){\n        setUsers(res.users);\n        setModalLoading(false);\n      }\n    });\n  }, [props]);\n\n  useEffect(() => {\n    if(props.propertyId){\n      updateDataTable();\n      permissionService.getUserPermission(props.propertyId).then(res => {\n        if(res.code === '0000'){\n          setShowForm(res.permission === \"owner\" || res.permission === \"admin\");\n        }\n      });\n    }\n  }, [props, updateDataTable]);\n\n  const cancelModal = () => {\n    props.cancelModal();\n    form.resetFields();\n    setLoading(false);\n  }\n\n  const customColumns = () => {\n    const columns = [\n      {\n        title: <IntlMessages id=\"antTable.title.user\" />,\n        key: 'name',\n        width: 100,\n        render: object => configs.renderCell(object, 'TextCell', 'name'),\n      },\n      {\n        title: <IntlMessages id=\"antTable.title.email\" />,\n        key: 'email',\n        width: 100,\n        render: object => configs.renderCell(object, 'TextCell', 'email'),\n      },\n      {\n        title: <IntlMessages id=\"antTable.title.permission\" />,\n        key: 'permission',\n        width: 100,\n        render: object => configs.renderCell(object, 'TextCell', 'permission'),\n      },\n      {\n        title: <IntlMessages id=\"antTable.title.status\" />,\n        key: 'status',\n        width: 100,\n        align: 'center',\n        render: object => {\n          return (\n            object.status ?\n            <CheckCircleFilled style={{color: '#65bb38', fontSize: '18px'}} title=\"Active\"/>\n            : <ExclamationCircleFilled style={{color: '#ffcc00', fontSize: '18px'}} title=\"Outgoing\"/>\n          );\n        },\n      },\n    ];\n\n    let indexUserOutgoing = _.findIndex(users, function(user){\n      return user.status === false;\n    })\n\n    if(indexUserOutgoing !== -1){\n      columns.push(\n        {\n          title: '',\n          key: 'cancelInvite',\n          width: 100,\n          render: object => {\n            return (\n              !object.status &&\n              <Button key=\"submit\" onClick={handleCancelInvite.bind(this, object)}>\n                {<IntlMessages id=\"propertyPage.modal.cancelInvite\" />}\n              </Button>\n            );\n          },\n        },\n      )\n    }\n\n    return columns;\n  }\n\n  const handleCancelInvite = (object) => {\n    setModalLoading(true);\n    propertyService.cancelInviteUser(props.propertyId, object.id).then(res => {\n      if(res.code === '0000'){\n        updateDataTable();\n      }\n    });\n  }\n\n  const renderOptionsPermission = () => {\n    let options = [];\n    _.forEach(permissions, (permission) => {\n      options.push(\n        <Option key={permission.id} value={permission.slug}>{permission.name}</Option>\n      );\n    })\n    return (\n      <Select\n        placeholder=\"Select a permission\"\n        allowClear\n        size=\"large\"\n      >\n        {options}\n      </Select>\n    );\n  }\n\n  const handleSubmit = (e) => {\n    setLoading(true);\n\n    form\n      .validateFields()\n      .then(values => {\n        setModalLoading(true);\n        onStore(values);\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n        setLoading(false);\n      });\n  }\n\n  const onStore = (values) => {\n    propertyService.inviteUser(props.propertyId, values).then(res => {\n      if(res.code === '0000'){\n        updateDataTable();\n        form.resetFields();\n        setLoading(false);\n      }\n    });\n  }\n\n  return (\n    <PropertyModalWrapper\n      className=\"user-access-modal\"\n      forceRender={true}\n      visible={props.visible}\n      title={<IntlMessages id=\"propertyPage.modal.userAccess\" />}\n      onCancel={cancelModal}\n      footer={[\n        <Button key=\"back\" onClick={cancelModal}>\n          {<IntlMessages id=\"propertyPage.modal.cancel\" />}\n        </Button>,\n        <Button key=\"submit\" className=\"btn-success\" type=\"primary\" loading={loading} onClick={handleSubmit}>\n          {<IntlMessages id=\"propertyPage.modal.save\" />}\n        </Button>,\n      ]}\n    >\n      {\n        modalLoading ?\n        <Loader /> :\n        <SimpleTable columns={customColumns()} dataList={dataList ? dataList : new fakeData(0, [])} pagination={false} />\n      }\n\n      <Form\n        form={form}\n        name=\"inviteUser\"\n        layout=\"vertical\"\n        scrollToFirstError\n      >\n        {\n          showForm &&\n          <div>\n            <div className=\"form-title\">\n              <h3>Invite User Form</h3>\n            </div>\n            <div className=\"form-body\">\n              <Form.Item\n                name=\"user_email\"\n                className=\"isoInputWrapper\"\n                label=\"User Email\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'This field is required',\n                  },\n                  {\n                    type: 'email',\n                    message: 'The input is not valid Email',\n                  },\n                  () => ({\n                    validator(rule, value) {\n                      if(value)\n                        return userService.checkEmailExistsInProperty(value, props.propertyId);\n                      else\n                        return Promise.resolve();\n                    },\n                  }),\n                ]}\n              >\n                <Input className=\"pac-target-input\" size=\"large\" placeholder=\"Input user email\"/>\n              </Form.Item>\n              <Form.Item\n                name=\"permission\"\n                label=\"Permission\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'This field is required',\n                  },\n                ]}\n              >\n                {renderOptionsPermission()}\n              </Form.Item>\n            </div>\n          </div>\n        }\n      </Form>\n    </PropertyModalWrapper>\n  );\n}\n\nexport default UserAccessModal;"]},"metadata":{},"sourceType":"module"}